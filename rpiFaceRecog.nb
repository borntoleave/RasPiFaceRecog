(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.2' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    110174,       2361]
NotebookOptionsPosition[    108723,       2311]
NotebookOutlinePosition[    109062,       2326]
CellTagsIndexPosition[    109019,       2323]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[{
 RowBox[{
  RowBox[{"apiKey", "=", "\"\<AIzaSyBDBOicayGydcir_gqb4E3pM2g-GhtQS2g\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"engine", "=", "\"\<015598078043542143673:zraw6p7mdd8\>\""}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.673973329469997*^9, 3.673973345574637*^9}, {
  3.673975346204988*^9, 3.673975357819106*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"gs", "=", 
  RowBox[{
  "ServiceConnect", "[", "\"\<GoogleCustomSearch\>\"", "]"}]}]], "Input"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["ServiceObject",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False}, 
    PanelBox[
     PaneSelectorBox[{False->GridBox[{
        {
         GraphicsBox[
          {Thickness[0.038461538461538464`], 
           {FaceForm[{GrayLevel[0.93], Opacity[1.]}], 
            FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 
             3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}}}, {{{25.499999999999996`,
              2.5}, {25.499999999999996`, 1.3953100000000003`}, {
             24.604699999999998`, 0.49999999999999994`}, {23.5, 
             0.49999999999999994`}, {2.5, 0.49999999999999994`}, {
             1.3953100000000003`, 0.49999999999999994`}, {
             0.49999999999999994`, 1.3953100000000003`}, {
             0.49999999999999994`, 2.5}, {0.49999999999999994`, 23.5}, {
             0.49999999999999994`, 24.604699999999998`}, {1.3953100000000003`,
              25.499999999999996`}, {2.5, 25.499999999999996`}, {23.5, 
             25.499999999999996`}, {24.604699999999998`, 
             25.499999999999996`}, {25.499999999999996`, 
             24.604699999999998`}, {25.499999999999996`, 23.5}, {
             25.499999999999996`, 2.5}}}]}, 
           {FaceForm[{RGBColor[0.5, 0.5, 0.5], Opacity[1.]}], 
            FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
             1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{20.5426, 
             19.116799999999998`}, {16.3832, 21.876199999999997`}, {16.3832, 
             20.021499999999996`}, {6.930469999999999, 20.021499999999996`}, {
             6.930469999999999, 18.212100000000003`}, {16.3832, 
             18.212100000000003`}, {16.3832, 16.357399999999995`}, {20.5426, 
             19.116799999999998`}}}], 
            FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
             1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{5.30508, 13.8391}, {9.46445, 
             11.079700000000003`}, {9.46445, 12.933999999999997`}, {
             18.917199999999998`, 12.933999999999997`}, {18.917199999999998`, 
             14.7438}, {9.46445, 14.7438}, {9.46445, 16.598}, {5.30508, 
             13.8391}}}], 
            FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
             1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{5.30508, 13.8391}, {9.46445, 
             11.079700000000003`}, {9.46445, 12.933999999999997`}, {
             18.917199999999998`, 12.933999999999997`}, {18.917199999999998`, 
             14.7438}, {9.46445, 14.7438}, {9.46445, 16.598}, {5.30508, 
             13.8391}}}], 
            FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
             1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0,
              1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
             0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIRIGYC4sIjUTVcAooO8+XdOPpnKDg8YkwNXuen7JA2
W/qycJSgw5sbHEde31CB82PFhGf3n1V1aFVgVz0zR8oBrF9czWFHsFXE/9Wy
Dje0Dj4qiFWDy7cVLYptDVKH65/g6Xbu0HMNOB9sn4I23H6w+SWacD5De8DS
tDQNB7ldC/alskg4aD2+nx6joeFgnPFi/oMZog5B9vlaQa/UHao9k7f0KUhA
+D/UUPVbqML5jCB+oIpDzJHypGv8Eg4eGad3ikiqwM2T57H5LndPGW6eya7m
GzMvKcH1o4cXABG3d/Y=
             "]], 
            FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
             1, 0}, {0, 1, 0}}}, {{{14.163129999999999`, 4.337966249999999}, {
             16.96813, 4.337966249999999}, {16.96813, 5.047809999999999}, {
             14.98813, 5.047809999999999}, {14.98813, 8.29796625}, {
             14.163129999999999`, 8.29796625}, {14.163129999999999`, 
             4.337966249999999}}}]}},
          AspectRatio->1,
          Axes->False,
          Background->GrayLevel[0.93],
          Frame->True,
          FrameStyle->Directive[
            Thickness[Tiny], 
            GrayLevel[0.7]],
          FrameTicks->None,
          ImageSize->{Automatic, 
            Dynamic[
            3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification]), ImageSizeCache -> {45., {0., 9.}}]}], 
         GridBox[{
           {
            TagBox["\<\"GoogleCustomSearch\"\>",
             "SummaryItem"]},
           {
            TagBox[
             DynamicBox[ToBoxes[
               If[
                TrueQ[
                 ServiceConnections`Private`authenticatedServiceQ[
                 "connection-2e4e4f0fe55388788342ddf4be127cd7"]], "Connected",
                 "Not Connected"], StandardForm],
              ImageSizeCache->{82., {0., 9.}}],
             "SummaryItem"]}
          },
          AutoDelete->False,
          
          BaseStyle->{
           ShowStringCharacters -> False, NumberMarks -> False, 
            PrintPrecision -> 3, ShowSyntaxStyles -> False},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
       },
       AutoDelete->False,
       BaselinePosition->{1, 1},
       GridBoxAlignment->{"Rows" -> {{Top}}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True->
      GridBox[{
        {
         GraphicsBox[
          {Thickness[0.038461538461538464`], 
           {FaceForm[{GrayLevel[0.93], Opacity[1.]}], 
            FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 
             3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}}}, {{{25.499999999999996`,
              2.5}, {25.499999999999996`, 1.3953100000000003`}, {
             24.604699999999998`, 0.49999999999999994`}, {23.5, 
             0.49999999999999994`}, {2.5, 0.49999999999999994`}, {
             1.3953100000000003`, 0.49999999999999994`}, {
             0.49999999999999994`, 1.3953100000000003`}, {
             0.49999999999999994`, 2.5}, {0.49999999999999994`, 23.5}, {
             0.49999999999999994`, 24.604699999999998`}, {1.3953100000000003`,
              25.499999999999996`}, {2.5, 25.499999999999996`}, {23.5, 
             25.499999999999996`}, {24.604699999999998`, 
             25.499999999999996`}, {25.499999999999996`, 
             24.604699999999998`}, {25.499999999999996`, 23.5}, {
             25.499999999999996`, 2.5}}}]}, 
           {FaceForm[{RGBColor[0.5, 0.5, 0.5], Opacity[1.]}], 
            FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
             1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{20.5426, 
             19.116799999999998`}, {16.3832, 21.876199999999997`}, {16.3832, 
             20.021499999999996`}, {6.930469999999999, 20.021499999999996`}, {
             6.930469999999999, 18.212100000000003`}, {16.3832, 
             18.212100000000003`}, {16.3832, 16.357399999999995`}, {20.5426, 
             19.116799999999998`}}}], 
            FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
             1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{5.30508, 13.8391}, {9.46445, 
             11.079700000000003`}, {9.46445, 12.933999999999997`}, {
             18.917199999999998`, 12.933999999999997`}, {18.917199999999998`, 
             14.7438}, {9.46445, 14.7438}, {9.46445, 16.598}, {5.30508, 
             13.8391}}}], 
            FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
             1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{5.30508, 13.8391}, {9.46445, 
             11.079700000000003`}, {9.46445, 12.933999999999997`}, {
             18.917199999999998`, 12.933999999999997`}, {18.917199999999998`, 
             14.7438}, {9.46445, 14.7438}, {9.46445, 16.598}, {5.30508, 
             13.8391}}}], 
            FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
             1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0,
              1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
             0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIRIGYC4sIjUTVcAooO8+XdOPpnKDg8YkwNXuen7JA2
W/qycJSgw5sbHEde31CB82PFhGf3n1V1aFVgVz0zR8oBrF9czWFHsFXE/9Wy
Dje0Dj4qiFWDy7cVLYptDVKH65/g6Xbu0HMNOB9sn4I23H6w+SWacD5De8DS
tDQNB7ldC/alskg4aD2+nx6joeFgnPFi/oMZog5B9vlaQa/UHao9k7f0KUhA
+D/UUPVbqML5jCB+oIpDzJHypGv8Eg4eGad3ikiqwM2T57H5LndPGW6eya7m
GzMvKcH1o4cXABG3d/Y=
             "]], 
            FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
             1, 0}, {0, 1, 0}}}, {{{14.163129999999999`, 4.337966249999999}, {
             16.96813, 4.337966249999999}, {16.96813, 5.047809999999999}, {
             14.98813, 5.047809999999999}, {14.98813, 8.29796625}, {
             14.163129999999999`, 8.29796625}, {14.163129999999999`, 
             4.337966249999999}}}]}},
          AspectRatio->1,
          Axes->False,
          Background->GrayLevel[0.93],
          Frame->True,
          FrameStyle->Directive[
            Thickness[Tiny], 
            GrayLevel[0.7]],
          FrameTicks->None,
          ImageSize->{Automatic, 
            Dynamic[
            3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification]), ImageSizeCache -> {45., {0., 9.}}]}], 
         GridBox[{
           {
            TagBox["\<\"GoogleCustomSearch\"\>",
             "SummaryItem"]},
           {
            TagBox[
             DynamicBox[ToBoxes[
               If[
                TrueQ[
                 ServiceConnections`Private`authenticatedServiceQ[
                 "connection-2e4e4f0fe55388788342ddf4be127cd7"]], "Connected",
                 "Not Connected"], StandardForm]],
             "SummaryItem"]}
          },
          AutoDelete->False,
          
          BaseStyle->{
           ShowStringCharacters -> False, NumberMarks -> False, 
            PrintPrecision -> 3, ShowSyntaxStyles -> False},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
       },
       AutoDelete->False,
       BaselinePosition->{1, 1},
       GridBoxAlignment->{"Rows" -> {{Top}}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, Dynamic[
      Typeset`open$$],
      ImageSize->Automatic],
     BaselinePosition->Baseline],
    DynamicModuleValues:>{}], "]"}],
  ServiceObject[
  "GoogleCustomSearch", "ID" -> "connection-2e4e4f0fe55388788342ddf4be127cd7"],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.673972841948585*^9, 3.673993715653304*^9, 3.6739947054727182`*^9, 
   3.673995620595134*^9, {3.673995919811802*^9, 3.673995948266264*^9}, 
   3.674001118174011*^9, 3.674082729745308*^9}]
}, Open  ]],

Cell[BoxData["SystemDialogInput"], "Input",
 CellChangeTimes->{{3.6739960595021067`*^9, 3.6739960643251343`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"gs", "[", "#", "]"}], "&"}], "/@", 
  RowBox[{"{", 
   RowBox[{
   "\"\<Authenication\>\"", ",", "\"\<ID\>\"", ",", "\"\<Information\>\"", 
    ",", "\"\<Name\>\"", ",", "\"\<Requests\>\""}], "}"}]}]], "Input",
 CellChangeTimes->{{3.673995627890294*^9, 3.673995758454129*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"TextSentences", "[", 
   RowBox[{"WikipediaData", "[", "\"\<Moon\>\"", "]"}], "]"}], "[", 
  RowBox[{"[", 
   RowBox[{";;", "2"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{3.67408682437851*^9, 3.6740868566300583`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"The Moon is Earth's only permanent natural satellite.\"\>", 
   ",", "\<\"It is one of the largest natural satellites in the Solar System, \
and the largest among planetary satellites relative to the size of the planet \
that it orbits (its primary).\"\>"}], "}"}]], "Output",
 CellChangeTimes->{3.6740868591119223`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Speak", "[", 
  RowBox[{
   RowBox[{"TextSentences", "[", 
    RowBox[{"WikipediaData", "[", "\"\<Moon\>\"", "]"}], "]"}], "[", 
   RowBox[{"[", 
    RowBox[{";;", "2"}], "]"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.673994387139113*^9, 3.6739944566282663`*^9}, {
  3.673994494271244*^9, 3.6739945081650133`*^9}, {3.674082808360804*^9, 
  3.6740828118452473`*^9}, {3.674082844328878*^9, 3.6740828471923227`*^9}, {
  3.674086736287615*^9, 3.6740867540402117`*^9}, {3.674086810147677*^9, 
  3.674086818555172*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"TTS", "@", 
   RowBox[{
    RowBox[{"TextSentences", "[", 
     RowBox[{"WikipediaData", "[", "\"\<Moon\>\"", "]"}], "]"}], "[", 
    RowBox[{"[", 
     RowBox[{";;", "2"}], "]"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{3.674086882794504*^9}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{3.674086879246635*^9}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"p2wTTS", "[", 
    RowBox[{"text_", ",", 
     RowBox[{"lan_:", "\"\<en-US\>\""}]}], "]"}], ":=", 
   RowBox[{"Run", "[", 
    RowBox[{
    "\"\<pico2wave -l \>\"", "<>", "lan", "<>", "\"\< -w temp.wav \\\"\>\"", "<>",
      "text", "<>", "\"\<\\\" && aplay temp.wav && rm temp.wav\>\""}], 
    "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"p2wTTS", "[", "\"\<Today is a rainy day\>\"", "]"}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.674085606541521*^9, 3.674085625299498*^9}, {
  3.674085658115663*^9, 3.674085693830958*^9}, {3.674085799104575*^9, 
  3.674085816050623*^9}, {3.674085948638699*^9, 3.674086127372284*^9}, {
  3.67408616912018*^9, 3.6740861750093803`*^9}, {3.674086216441799*^9, 
  3.674086321729988*^9}, {3.6740863698245564`*^9, 3.674086420567548*^9}, {
  3.674086461319543*^9, 3.674086547294916*^9}, {3.674086588196227*^9, 
  3.674086592075992*^9}, {3.674087126664384*^9, 3.6740871324162197`*^9}}],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{
   RowBox[{
    RowBox[{"mySpeak", "[", 
     RowBox[{"input_", ",", 
      RowBox[{"voice_String:", "\"\<Alex\>\""}], ",", 
      RowBox[{"options", ":", 
       RowBox[{"OptionsPattern", "[", "Speak", "]"}]}]}], "]"}], ":=", 
    RowBox[{"CompoundExpression", "[", 
     RowBox[{
      RowBox[{"Run", "[", 
       RowBox[{"\"\<say -v \>\"", "<>", "voice", "<>", "\"\< \>\"", "<>", 
        RowBox[{"SpokenString", "[", 
         RowBox[{"input", ",", "options"}], "]"}]}], "]"}], ",", "Null"}], 
     "]"}]}], ";", "\[IndentingNewLine]", 
   RowBox[{"voices", "=", 
    RowBox[{"{", 
     RowBox[{
     "\"\<Agnes\>\"", ",", "\"\<Albert\>\"", ",", "\"\<Alex\>\"", ",", 
      "\"\<Bad\>\"", ",", "\"\<Bahh\>\"", ",", "\"\<Bells\>\"", ",", 
      "\"\<Boing\>\"", ",", "\"\<Bruce\>\"", ",", "\"\<Bubbles\>\"", ",", 
      "\"\<Cellos\>\"", ",", "\"\<Daniel\>\"", ",", "\"\<Deranged\>\"", ",", 
      "\"\<Fred\>\"", ",", "\"\<Good\>\"", ",", "\"\<Hysterical\>\"", ",", 
      "\"\<Junior\>\"", ",", "\"\<Karen\>\"", ",", "\"\<Kathy\>\"", ",", 
      "\"\<Moira\>\"", ",", "\"\<Pipe\>\"", ",", "\"\<Princess\>\"", ",", 
      "\"\<Ralph\>\"", ",", "\"\<Samantha\>\"", ",", "\"\<Tessa\>\"", ",", 
      "\"\<Trinoids\>\"", ",", "\"\<Veena\>\"", ",", "\"\<Vicki\>\"", ",", 
      "\"\<Victoria\>\"", ",", "\"\<Whisper\>\"", ",", "\"\<Zarvox\>\""}], 
     "}"}]}], ";", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"mySpeak", "[", 
      RowBox[{"\"\<Hello!\>\"", ",", "#"}], "]"}], "&"}], "/@", "voices"}]}], 
  " ", "*)"}]], "Input",
 CellChangeTimes->{{3.674075690106246*^9, 3.674075691763308*^9}, {
   3.674086702932702*^9, 3.674086709095318*^9}, 3.674086896003907*^9, {
   3.6740869308146887`*^9, 3.674086946521717*^9}}],

Cell[BoxData[{
 RowBox[{"Needs", "[", "\"\<GUIKit`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{"GUIRunModal", "[", 
  RowBox[{"Widget", "[", 
   RowBox[{"\"\<Button\>\"", ",", "\[IndentingNewLine]", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\"\<text\>\"", "->", "\"\<Update\>\""}], ",", " ", 
      "\[IndentingNewLine]", " ", 
      RowBox[{"BindEvent", "[", 
       RowBox[{"\"\<action\>\"", ",", " ", "\[IndentingNewLine]", "  ", 
        RowBox[{"Script", "[", 
         RowBox[{"updateList", "[", "]"}], "]"}]}], " ", 
       "\[IndentingNewLine]", "   ", "]"}], ",", 
      RowBox[{"Script", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"updateList", "[", "]"}], ":=", 
         RowBox[{"continue", "=", "0"}]}], ";"}], "]"}]}], 
     "\[IndentingNewLine]", " ", "}"}]}], "]"}], 
  "]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.674052322998149*^9, 3.674052336188304*^9}, {
   3.6740524272037067`*^9, 3.674052550681078*^9}, 3.674053350560051*^9, 
   3.674086717091608*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"shutter", "=", 
   RowBox[{"Sound", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"SoundNote", "[", "\"\<C\>\"", "]"}], ",", 
       RowBox[{"SoundNote", "[", "\"\<C5\>\"", "]"}]}], "}"}], ",", "0.05"}], 
    "]"}]}], ";", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Import", "[", 
     RowBox[{
      RowBox[{"NotebookDirectory", "[", "]"}], "<>", 
      "\"\<cameraShutter.mp3\>\""}], "]"}], ";"}], "*)"}], "\n", 
  RowBox[{
   RowBox[{"faceTrap", "[", 
    RowBox[{"diff_", ",", "shutter_"}], "]"}], ":=", 
   RowBox[{"(", 
    RowBox[{"DynamicModule", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"continue", "=", "True"}], ",", 
        RowBox[{"curImg", "=", "Null"}], ",", "prevImg", ",", 
        RowBox[{"imgIdtf", "=", 
         RowBox[{"<|", "|>"}]}], ",", "idtfName", ",", "sentence", ",", 
        RowBox[{"face", "=", 
         RowBox[{"{", "}"}]}], ",", "faceCoord"}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"Monitor", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"While", "[", 
         RowBox[{"continue", ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"curImg", "=", 
            RowBox[{"CurrentImage", "[", "]"}]}], ";", 
           RowBox[{"face", "=", 
            RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"ImageQ", "[", "prevImg", "]"}], "&&", 
              RowBox[{
               RowBox[{"ImageDistance", "[", 
                RowBox[{"curImg", ",", "prevImg"}], "]"}], "<", "diff"}]}], 
             ",", 
             RowBox[{"Pause", "[", "0.5", "]"}], 
             RowBox[{"(*", " ", 
              RowBox[{"ignore", " ", "steady", " ", "frames"}], " ", "*)"}], 
             ",", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"imgIdtf", "=", 
               RowBox[{"ImageIdentify", "[", 
                RowBox[{
                "curImg", ",", "All", ",", "3", ",", "\"\<Probability\>\""}], 
                "]"}]}], ";", "\[IndentingNewLine]", 
              RowBox[{"idtfName", "=", 
               RowBox[{"EntityValue", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"Normal", "[", "imgIdtf", "]"}], "[", 
                  RowBox[{"[", 
                   RowBox[{"1", ",", "1"}], "]"}], "]"}], ",", 
                 "\"\<Name\>\""}], "]"}]}], ";", "\[IndentingNewLine]", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"imgIdtf", "[", 
                  RowBox[{"[", "1", "]"}], "]"}], "<", "0.5"}], ",", 
                RowBox[{
                 RowBox[{"sentence", "=", 
                  RowBox[{"\"\<Might be \>\"", "<>", "idtfName"}]}], ";", 
                 RowBox[{"p2wTTS", "[", "sentence", "]"}]}], ",", 
                "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"sentence", "=", "idtfName"}], ";", 
                 "\[IndentingNewLine]", 
                 RowBox[{"p2wTTS", "[", "sentence", "]"}], ";", 
                 "\[IndentingNewLine]", 
                 RowBox[{"If", "[", 
                  RowBox[{
                   RowBox[{"idtfName", "!=", "\"\<person\>\""}], ",", 
                   "Nothing", ",", "\[IndentingNewLine]", 
                   RowBox[{
                    RowBox[{"faceCoord", "=", 
                    RowBox[{"FindFaces", "[", "curImg", "]"}]}], ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{"face", "=", "\[IndentingNewLine]", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"faceCoord", "===", 
                    RowBox[{"{", "}"}]}], ",", 
                    RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"EmitSound", "[", "shutter", "]"}], ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"ImageTrim", "[", 
                    RowBox[{"curImg", ",", "#"}], "]"}], "&"}], "/@", 
                    "faceCoord"}]}]}], 
                    RowBox[{"(*", 
                    RowBox[{
                    RowBox[{"HighlightImage", "[", 
                    RowBox[{"curImg", ",", 
                    RowBox[{"Rectangle", "@@@", "faceCoord"}], ",", 
                    RowBox[{"Method", "\[Rule]", "\"\<Boundary\>\""}]}], 
                    "]"}], ";"}], "*)"}], "]"}]}]}]}], "]"}], ";", 
                 "\[IndentingNewLine]", 
                 RowBox[{"prevImg", "=", "curImg"}]}]}], "]"}]}]}], 
            "\[IndentingNewLine]", "]"}], ";", 
           RowBox[{"Pause", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"StringLength", "[", 
               RowBox[{"SpokenString", "[", "sentence", "]"}], "]"}], "/", 
              "10"}], "+", "0.5"}], "]"}]}]}], "\[IndentingNewLine]", "]"}], 
        ",", 
        RowBox[{"Grid", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
             "\"\<Current Image\>\"", ",", 
              "\"\<Identification->Probability\>\"", ",", 
              "\"\<Face Detected\>\""}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"curImg", ",", 
              RowBox[{"Column", "@", 
               RowBox[{"Normal", "[", "imgIdtf", "]"}]}], ",", 
              RowBox[{"Row", "[", "face", "]"}]}], "}"}]}], "}"}], ",", 
          RowBox[{"Frame", "\[Rule]", "All"}]}], "]"}]}], "]"}]}], "]"}], 
    ")"}]}]}], "\[IndentingNewLine]", 
 RowBox[{"faceTrap", "[", 
  RowBox[{"40", ",", "shutter"}], "]"}]}], "Input",
 CellChangeTimes->{
  3.674052797916492*^9, {3.674053278242453*^9, 3.674053321117872*^9}, 
   3.674053385947278*^9, {3.674053800713019*^9, 3.674053800784614*^9}, {
   3.6740538369094543`*^9, 3.674053837012278*^9}, {3.674054498208728*^9, 
   3.6740545699798594`*^9}, {3.674054604345029*^9, 3.674054608180853*^9}, {
   3.6740556028874693`*^9, 3.674055714737164*^9}, {3.6740557460229883`*^9, 
   3.67405575729016*^9}, {3.6740558112643547`*^9, 3.67405591473783*^9}, {
   3.674055946629479*^9, 3.674055968817984*^9}, {3.674056006106187*^9, 
   3.674056071371306*^9}, {3.67405610878113*^9, 3.674056150025158*^9}, 
   3.674056181903956*^9, {3.6740562219540243`*^9, 3.6740562299143963`*^9}, {
   3.6740563180325193`*^9, 3.6740563454407*^9}, {3.674056520406475*^9, 
   3.6740565652140903`*^9}, {3.6740565970757513`*^9, 3.6740566460079527`*^9}, 
   3.6740566798863907`*^9, {3.674057923730945*^9, 3.674058033876075*^9}, {
   3.674058072688156*^9, 3.674058125655776*^9}, {3.674058165345521*^9, 
   3.674058256323538*^9}, {3.6740583392072678`*^9, 3.674058404220533*^9}, {
   3.6740585682296667`*^9, 3.674058577586738*^9}, {3.674058705686535*^9, 
   3.674058716722126*^9}, {3.674058826364896*^9, 3.674058837275559*^9}, {
   3.674058874712166*^9, 3.6740588750861263`*^9}, {3.674058921803212*^9, 
   3.674058990204125*^9}, 3.674059111495482*^9, {3.674059658629735*^9, 
   3.674059770916304*^9}, {3.674059812586327*^9, 3.674059833250164*^9}, {
   3.674060353110435*^9, 3.6740604180840397`*^9}, {3.674060467736974*^9, 
   3.6740605253567142`*^9}, {3.6740605745166893`*^9, 3.674060601849729*^9}, {
   3.674060680520605*^9, 3.674060781165614*^9}, {3.6740608777213697`*^9, 
   3.6740608781027813`*^9}, {3.674060908393496*^9, 3.674060909119257*^9}, {
   3.6740610265687027`*^9, 3.674061028040629*^9}, {3.674061154353775*^9, 
   3.6740611560697002`*^9}, {3.6740613099811993`*^9, 3.674061330923717*^9}, {
   3.6740614545118847`*^9, 3.6740614878544416`*^9}, {3.674061607259446*^9, 
   3.6740617403719263`*^9}, {3.674061787737836*^9, 3.67406180417124*^9}, {
   3.674061988480576*^9, 3.6740619889829407`*^9}, {3.674062069521761*^9, 
   3.674062131559257*^9}, {3.674062164126206*^9, 3.674062180480715*^9}, {
   3.674062217942637*^9, 3.6740622445917997`*^9}, {3.674062286637555*^9, 
   3.674062297971374*^9}, {3.674062341020658*^9, 3.6740623583443403`*^9}, {
   3.6740624757802973`*^9, 3.674062496084092*^9}, {3.674062541505665*^9, 
   3.674062597306828*^9}, 3.674062628185059*^9, {3.674062666049477*^9, 
   3.674062667983872*^9}, {3.6740627064379387`*^9, 3.6740627102205467`*^9}, {
   3.674062750107897*^9, 3.6740627501562243`*^9}, {3.674086958649444*^9, 
   3.674086971304541*^9}, {3.674087011727707*^9, 3.674087028174749*^9}, {
   3.6740871474619503`*^9, 3.67408714913616*^9}}],

Cell[BoxData[{
 RowBox[{"FrontEndExecute", "[", 
  RowBox[{"FrontEnd`RecordSound", "[", 
   RowBox[{"7", ",", "0"}], "]"}], "]"}], "\n", 
 RowBox[{"FrontEndExecute", "[", 
  RowBox[{"FrontEnd`RecordSound", "[", 
   RowBox[{"8", ",", "0"}], "]"}], "]"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"will", " ", "probably", " ", "do", " ", 
    RowBox[{"this", ".", "This"}], " ", "is", " ", "the", " ", "least", " ", 
    "clear", " ", "point", " ", "so", " ", 
    RowBox[{"far", ".", "This"}], " ", "may", " ", "not", " ", "be", " ", 
    "needed", " ", "on", " ", 
    RowBox[{"Windows", ".", "\[IndentingNewLine]", "Now"}]}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"FrontEndExecute", "[", 
    RowBox[{"FrontEnd`RecordSound", "[", "5", "]"}], "]"}]}], " ", 
  RowBox[{"(*", 
   RowBox[{
   "will", " ", "list", " ", "the", " ", "available", " ", "devices", " ", 
    "by", " ", "number"}], "*)"}]}], "\n", 
 RowBox[{
  RowBox[{"FrontEndExecute", "[", 
   RowBox[{"FrontEnd`RecordSound", "[", 
    RowBox[{"6", ",", "deviceNumber"}], "]"}], "]"}], 
  RowBox[{"(*", " ", 
   RowBox[{
   "will", " ", "list", " ", "the", " ", "available", " ", "formats", " ", 
    "for", " ", "the", " ", "device"}], "*)"}]}], "\n", 
 RowBox[{
  RowBox[{"FrontEndExecute", "[", 
   RowBox[{"FrontEnd`RecordSound", "[", 
    RowBox[{"1", ",", "deviceNumber", ",", "formatNumber"}], "]"}], "]"}], 
  " ", 
  RowBox[{"(*", 
   RowBox[{"will", " ", "start", " ", 
    RowBox[{"recording", ".", "It"}], " ", "returns", " ", "control", " ", 
    RowBox[{"immediately", "."}]}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"FrontEndExecute", "[", 
   RowBox[{"FrontEnd`RecordSound", "[", "2", "]"}], "]"}], " ", 
  RowBox[{"(*", 
   RowBox[{
   "will", " ", "stop", " ", "recording", " ", "and", " ", "return", " ", 
    "the", " ", 
    RowBox[{"duration", "."}]}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"FrontEndExecute", "[", 
   RowBox[{"FrontEnd`RecordSound", "[", "3", "]"}], "]"}], " ", 
  RowBox[{"(*", 
   RowBox[{
   "will", " ", "return", " ", "the", " ", "recorded", " ", "sound", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"it", "'"}], "s", " ", "the", " ", "\"\<OK\>\"", " ", "button", 
      " ", "in", " ", "the", " ", "dialog"}], ")"}]}], "*)"}]}], "\n", 
 RowBox[{
  RowBox[{"FrontEndExecute", "[", 
   RowBox[{"FrontEnd`RecordSound", "[", "4", "]"}], "]"}], " ", 
  RowBox[{"(*", 
   RowBox[{
   "will", " ", "probably", " ", "discard", " ", "the", " ", "recorded", " ", 
    "sound", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"it", "'"}], "s", " ", "the", " ", "Cancel", " ", "button"}], 
     ")"}]}], "*)"}]}], "\n", 
 RowBox[{
  RowBox[{"FrontEndExecute", "[", 
   RowBox[{"FrontEnd`RecordSound", "[", 
    RowBox[{"9", ",", "0"}], "]"}], "]"}], " ", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "will", " ", "return", " ", "the", " ", "current", " ", "volume", " ", 
     "of", " ", "the", " ", "recorded", " ", "sound"}], ",", 
    RowBox[{
    "and", " ", "is", " ", "used", " ", "for", " ", "the", " ", "progress", 
     " ", "indicator", " ", "in", " ", "the", " ", 
     RowBox[{"dialog", "."}]}]}], "*)"}]}]}], "Input",
 CellChangeTimes->{{3.674078483104892*^9, 3.674078483106382*^9}, {
  3.674078765688466*^9, 3.67407884451094*^9}, {3.674087063886385*^9, 
  3.6740870775759163`*^9}}],

Cell[BoxData["\"\<https://mathematica.stackexchange.com/questions/4451/is-it-\
possible-to-use-mathematica-to-record-sound-and-or-vision/82776#82776?s=\
ee5db0cf5dae48d98db5b36b0872bbc6\>\""], "Input",
 CellChangeTimes->{{3.674078449019483*^9, 3.674078461092938*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SystemDialogInput", "[", "\"\<RecordSound\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.6740789034590807`*^9, 3.674078903460792*^9}}],

Cell[BoxData[
 RowBox[{"SystemDialogInput", "[", "\<\"RecordSound\"\>", "]"}]], "Output",
 CellChangeTimes->{3.674078921690071*^9, 3.6740870909710617`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FindDevices", "[", "]"}]], "Input",
 CellChangeTimes->{{3.6740878004774847`*^9, 3.674087817800818*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"First", "::", "nofirst"}], "MessageName"], 
  RowBox[{
  ":", " "}], \
"\<\"\[NoBreak]\\!\\(\\*RowBox[{\\\"MRAALink`Private`I2CFindDevices\\\", \
\\\"[\\\", \\\"]\\\"}]\\)\[NoBreak] has zero length and no first \
element.\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.674087831700986*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   InterpretationBox[
    RowBox[{
     TagBox["DeviceObject",
      "SummaryHead"], "[", 
     DynamicModuleBox[{Typeset`open$$ = False}, 
      PanelBox[
       PaneSelectorBox[{False->GridBox[{
          {
           PaneBox[
            ButtonBox[
             
             DynamicBox[FEPrivate`FrontEndResource[
              "FEBitmaps", "SquarePlusIconMedium"],
              ImageSizeCache->{12., {0., 12.}}],
             Appearance->None,
             ButtonFunction:>(Typeset`open$$ = True),
             Evaluator->Automatic,
             Method->"Preemptive"],
            Alignment->{Center, Center},
            
            ImageSize->
             Dynamic[{
              Automatic, 3.5 CurrentValue["FontCapHeight"]/
               AbsoluteCurrentValue[Magnification]}]], 
           GraphicsBox[
            {Thickness[0.038461538461538464`], 
             {FaceForm[{RGBColor[1., 1., 1.], Opacity[1.]}], 
              FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1,
                3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}}}, {{{25.5, 2.5}, {
               25.5, 1.395}, {24.605, 0.5}, {23.5, 0.5}, {2.5, 0.5}, {1.395, 
               0.5}, {0.5, 1.395}, {0.5, 2.5}, {0.5, 23.5}, {0.5, 24.605}, {
               1.395, 25.5}, {2.5, 25.5}, {23.5, 25.5}, {24.605, 25.5}, {25.5,
                24.605}, {25.5, 23.5}, {25.5, 2.5}}}]}, 
             {RGBColor[0.7, 0.7, 0.7], Opacity[1.], JoinForm[{"Miter", 10.}], 
              JoinedCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1,
                3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}}}, {{{25.5, 2.5}, {
               25.5, 1.395}, {24.605, 0.5}, {23.5, 0.5}, {2.5, 0.5}, {1.395, 
               0.5}, {0.5, 1.395}, {0.5, 2.5}, {0.5, 23.5}, {0.5, 24.605}, {
               1.395, 25.5}, {2.5, 25.5}, {23.5, 25.5}, {24.605, 25.5}, {25.5,
                24.605}, {25.5, 23.5}, {25.5, 2.5}}},
               CurveClosed->{1}]}, 
             {FaceForm[{RGBColor[
              0.45999999999999996`, 0.45999999999999996`, 
               0.45999999999999996`], Opacity[1.]}], 
              FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
               11.020999999999999`, 15.084}, {14.979, 15.084}, {14.979, 
               20.542}, {11.020999999999999`, 20.542}}}]}, 
             {FaceForm[{RGBColor[0.7, 0.7, 0.7], Opacity[1.]}], 
              FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0,
                1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
               15.979000000000001`, 16.541999999999998`}, {
               10.020999999999999`, 16.541999999999998`}, {
               10.020999999999999`, 10.542}, {12.020999999999999`, 10.542}, {
               12.020999999999999`, 0.5}, {13.979000000000001`, 0.5}, {
               13.979000000000001`, 10.542}, {15.979000000000001`, 10.542}, {
               15.979000000000001`, 16.541999999999998`}}}]}},
            AspectRatio->Automatic,
            ImageSize->{Automatic, 
              Dynamic[3.5 CurrentValue["FontCapHeight"]]},
            PlotRange->{{0., 26.}, {0., 26.}}], GridBox[{
             {
              RowBox[{
               TagBox["\<\"Class: \"\>",
                "SummaryItemAnnotation"], "\[InvisibleSpace]", 
               TagBox["\<\"FunctionDemo\"\>",
                "SummaryItem"]}], 
              RowBox[{
               TagBox["\<\"ID: \"\>",
                "SummaryItemAnnotation"], "\[InvisibleSpace]", 
               TagBox["1",
                "SummaryItem"]}]},
             {
              RowBox[{
               TagBox["\<\"Status: \"\>",
                "SummaryItemAnnotation"], "\[InvisibleSpace]", 
               TagBox[
                DynamicModuleBox[{Devices`DeviceAPI`DeviceDump`lights$$ = {
                  Style[
                   Graphics[{{
                    RGBColor[0.88, 1, 0.88], 
                    Disk[{0, 0}]}, {
                    RGBColor[0, 0.85, 0], 
                    Circle[{0, 0}]}}, PlotRange -> {-2.2, 1.1}, ImageSize -> 
                    9, ImageMargins -> {{3, 3}, {2, 0}}, 
                    BaseStyle -> {CacheGraphics -> False}], Selectable -> 
                   False], 
                  Style[
                   Graphics[{{
                    RGBColor[1, 1, 0], 
                    Disk[{0, 0}]}, {
                    RGBColor[0.8, 0.8, 0], 
                    Circle[{0, 0}]}}, PlotRange -> {-2.2, 1.1}, ImageSize -> 
                    9, ImageMargins -> {{3, 3}, {2, 0}}, 
                    BaseStyle -> {CacheGraphics -> False}], Selectable -> 
                   False]}, Devices`DeviceAPI`DeviceDump`opacities$$ = {
                  Opacity[1], 
                  Opacity[0.2]}, Devices`DeviceAPI`DeviceDump`status$$ = {
                 "Connected", "Not connected"}, 
                 Devices`DeviceAPI`DeviceDump`d$$ = 
                 DeviceObject[{"FunctionDemo", 1}], 
                 Devices`DeviceAPI`DeviceDump`ind$$ = 2, 
                 Devices`DeviceAPI`DeviceDump`indr$$ = 1}, 
                 DynamicBox[ToBoxes[Devices`DeviceAPI`DeviceDump`ind$$ = If[
                    DeviceOpenQ[Devices`DeviceAPI`DeviceDump`d$$], 1, 2]; 
                   Devices`DeviceAPI`DeviceDump`indr$$ = If[
                    DeviceFramework`DeviceRegisteredQ[
                    Devices`DeviceAPI`DeviceDump`d$$], 1, 2]; Style[
                    Row[{
                    Part[
                    Devices`DeviceAPI`DeviceDump`lights$$, 
                    Devices`DeviceAPI`DeviceDump`ind$$], 
                    Part[
                    Devices`DeviceAPI`DeviceDump`status$$, 
                    Devices`DeviceAPI`DeviceDump`ind$$]}], 
                    Part[
                    Devices`DeviceAPI`DeviceDump`opacities$$, 
                    Devices`DeviceAPI`DeviceDump`indr$$]], StandardForm],
                  ImageSizeCache->{95., {4., 10.}}],
                 DynamicModuleValues:>{}],
                "SummaryItem"]}], "\[SpanFromLeft]"}
            },
            AutoDelete->False,
            
            BaseStyle->{
             ShowStringCharacters -> False, NumberMarks -> False, 
              PrintPrecision -> 3, ShowSyntaxStyles -> False},
            GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
         },
         AutoDelete->False,
         BaselinePosition->{1, 1},
         GridBoxAlignment->{"Rows" -> {{Top}}},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True->
        GridBox[{
          {
           PaneBox[
            ButtonBox[
             
             DynamicBox[FEPrivate`FrontEndResource[
              "FEBitmaps", "SquareMinusIconMedium"]],
             Appearance->None,
             ButtonFunction:>(Typeset`open$$ = False),
             Evaluator->Automatic,
             Method->"Preemptive"],
            Alignment->{Center, Center},
            
            ImageSize->
             Dynamic[{
              Automatic, 3.5 CurrentValue["FontCapHeight"]/
               AbsoluteCurrentValue[Magnification]}]], 
           GraphicsBox[
            {Thickness[0.038461538461538464`], 
             {FaceForm[{RGBColor[1., 1., 1.], Opacity[1.]}], 
              FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1,
                3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}}}, {{{25.5, 2.5}, {
               25.5, 1.395}, {24.605, 0.5}, {23.5, 0.5}, {2.5, 0.5}, {1.395, 
               0.5}, {0.5, 1.395}, {0.5, 2.5}, {0.5, 23.5}, {0.5, 24.605}, {
               1.395, 25.5}, {2.5, 25.5}, {23.5, 25.5}, {24.605, 25.5}, {25.5,
                24.605}, {25.5, 23.5}, {25.5, 2.5}}}]}, 
             {RGBColor[0.7, 0.7, 0.7], Opacity[1.], JoinForm[{"Miter", 10.}], 
              JoinedCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1,
                3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}}}, {{{25.5, 2.5}, {
               25.5, 1.395}, {24.605, 0.5}, {23.5, 0.5}, {2.5, 0.5}, {1.395, 
               0.5}, {0.5, 1.395}, {0.5, 2.5}, {0.5, 23.5}, {0.5, 24.605}, {
               1.395, 25.5}, {2.5, 25.5}, {23.5, 25.5}, {24.605, 25.5}, {25.5,
                24.605}, {25.5, 23.5}, {25.5, 2.5}}},
               CurveClosed->{1}]}, 
             {FaceForm[{RGBColor[
              0.45999999999999996`, 0.45999999999999996`, 
               0.45999999999999996`], Opacity[1.]}], 
              FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
               11.020999999999999`, 15.084}, {14.979, 15.084}, {14.979, 
               20.542}, {11.020999999999999`, 20.542}}}]}, 
             {FaceForm[{RGBColor[0.7, 0.7, 0.7], Opacity[1.]}], 
              FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0,
                1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
               15.979000000000001`, 16.541999999999998`}, {
               10.020999999999999`, 16.541999999999998`}, {
               10.020999999999999`, 10.542}, {12.020999999999999`, 10.542}, {
               12.020999999999999`, 0.5}, {13.979000000000001`, 0.5}, {
               13.979000000000001`, 10.542}, {15.979000000000001`, 10.542}, {
               15.979000000000001`, 16.541999999999998`}}}]}},
            AspectRatio->Automatic,
            ImageSize->{Automatic, 
              Dynamic[3.5 CurrentValue["FontCapHeight"]]},
            PlotRange->{{0., 26.}, {0., 26.}}], GridBox[{
             {
              RowBox[{
               TagBox["\<\"Class: \"\>",
                "SummaryItemAnnotation"], "\[InvisibleSpace]", 
               TagBox["\<\"FunctionDemo\"\>",
                "SummaryItem"]}], 
              RowBox[{
               TagBox["\<\"ID: \"\>",
                "SummaryItemAnnotation"], "\[InvisibleSpace]", 
               TagBox["1",
                "SummaryItem"]}]},
             {
              RowBox[{
               TagBox["\<\"Status: \"\>",
                "SummaryItemAnnotation"], "\[InvisibleSpace]", 
               TagBox[
                DynamicModuleBox[{Devices`DeviceAPI`DeviceDump`lights$$ = {
                  Style[
                   Graphics[{{
                    RGBColor[0.88, 1, 0.88], 
                    Disk[{0, 0}]}, {
                    RGBColor[0, 0.85, 0], 
                    Circle[{0, 0}]}}, PlotRange -> {-2.2, 1.1}, ImageSize -> 
                    9, ImageMargins -> {{3, 3}, {2, 0}}, 
                    BaseStyle -> {CacheGraphics -> False}], Selectable -> 
                   False], 
                  Style[
                   Graphics[{{
                    RGBColor[1, 1, 0], 
                    Disk[{0, 0}]}, {
                    RGBColor[0.8, 0.8, 0], 
                    Circle[{0, 0}]}}, PlotRange -> {-2.2, 1.1}, ImageSize -> 
                    9, ImageMargins -> {{3, 3}, {2, 0}}, 
                    BaseStyle -> {CacheGraphics -> False}], Selectable -> 
                   False]}, Devices`DeviceAPI`DeviceDump`opacities$$ = {
                  Opacity[1], 
                  Opacity[0.2]}, Devices`DeviceAPI`DeviceDump`status$$ = {
                 "Connected", "Not connected"}, 
                 Devices`DeviceAPI`DeviceDump`d$$ = 
                 DeviceObject[{"FunctionDemo", 1}], 
                 Devices`DeviceAPI`DeviceDump`ind$$, 
                 Devices`DeviceAPI`DeviceDump`indr$$}, 
                 DynamicBox[ToBoxes[Devices`DeviceAPI`DeviceDump`ind$$ = If[
                    DeviceOpenQ[Devices`DeviceAPI`DeviceDump`d$$], 1, 2]; 
                   Devices`DeviceAPI`DeviceDump`indr$$ = If[
                    DeviceFramework`DeviceRegisteredQ[
                    Devices`DeviceAPI`DeviceDump`d$$], 1, 2]; Style[
                    Row[{
                    Part[
                    Devices`DeviceAPI`DeviceDump`lights$$, 
                    Devices`DeviceAPI`DeviceDump`ind$$], 
                    Part[
                    Devices`DeviceAPI`DeviceDump`status$$, 
                    Devices`DeviceAPI`DeviceDump`ind$$]}], 
                    Part[
                    Devices`DeviceAPI`DeviceDump`opacities$$, 
                    Devices`DeviceAPI`DeviceDump`indr$$]], StandardForm]],
                 DynamicModuleValues:>{}],
                "SummaryItem"]}], "\[SpanFromLeft]"},
             {
              TagBox[
               DynamicModuleBox[{Devices`DeviceAPI`DeviceDump`opacities$$ = {
                 Opacity[1], 
                 Opacity[0.2]}, Devices`DeviceAPI`DeviceDump`d$$ = 
                DeviceObject[{"FunctionDemo", 1}], 
                Devices`DeviceAPI`DeviceDump`props$$, 
                Devices`DeviceAPI`DeviceDump`vals$$, 
                Devices`DeviceAPI`DeviceDump`reg$$}, 
                
                DynamicBox[ToBoxes[
                 Devices`DeviceAPI`DeviceDump`reg$$ = 
                   DeviceFramework`DeviceRegisteredQ[
                    Devices`DeviceAPI`DeviceDump`d$$]; 
                  Devices`DeviceAPI`DeviceDump`props$$ = 
                   DeviceFramework`DeviceExternalProperties[
                    Devices`DeviceAPI`DeviceDump`d$$]; 
                  Devices`DeviceAPI`DeviceDump`vals$$ = 
                   Devices`DeviceAPI`DeviceDump`d$$[
                    Devices`DeviceAPI`DeviceDump`props$$]; Column[
                    Join[{
                    BoxForm`SummaryItem[{"Properties: ", 
                    If[
                    Or[
                    Not[Devices`DeviceAPI`DeviceDump`reg$$], 
                    Devices`DeviceAPI`DeviceDump`props$$ === {}], 
                    Style[None, 
                    Part[Devices`DeviceAPI`DeviceDump`opacities$$, 
                    If[Devices`DeviceAPI`DeviceDump`reg$$, 1, 2]]], ""]}]}, 
                    MapThread[BoxForm`SummaryItem[{
                    StringJoin["      ", 
                    ToString[#], ": "], #2}]& , {
                    Devices`DeviceAPI`DeviceDump`props$$, 
                    Devices`DeviceAPI`DeviceDump`vals$$}]]], StandardForm]],
                DynamicModuleValues:>{}],
               "SummaryItem"], "\[SpanFromLeft]"}
            },
            AutoDelete->False,
            
            BaseStyle->{
             ShowStringCharacters -> False, NumberMarks -> False, 
              PrintPrecision -> 3, ShowSyntaxStyles -> False},
            GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
         },
         AutoDelete->False,
         BaselinePosition->{1, 1},
         GridBoxAlignment->{"Rows" -> {{Top}}},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, Dynamic[
        Typeset`open$$],
        ImageSize->Automatic],
       BaselinePosition->Baseline],
      DynamicModuleValues:>{}], "]"}],
    DeviceObject[{"FunctionDemo", 1}],
    Editable->False,
    SelectWithContents->True,
    Selectable->False], ",", 
   InterpretationBox[
    RowBox[{
     TagBox["DeviceObject",
      "SummaryHead"], "[", 
     DynamicModuleBox[{Typeset`open$$ = False}, 
      PanelBox[
       PaneSelectorBox[{False->GridBox[{
          {
           PaneBox[
            ButtonBox[
             
             DynamicBox[FEPrivate`FrontEndResource[
              "FEBitmaps", "SquarePlusIconMedium"],
              ImageSizeCache->{12., {0., 12.}}],
             Appearance->None,
             ButtonFunction:>(Typeset`open$$ = True),
             Evaluator->Automatic,
             Method->"Preemptive"],
            Alignment->{Center, Center},
            
            ImageSize->
             Dynamic[{
              Automatic, 3.5 CurrentValue["FontCapHeight"]/
               AbsoluteCurrentValue[Magnification]}]], 
           GraphicsBox[
            {Thickness[0.038461538461538464`], 
             {FaceForm[{RGBColor[1., 1., 1.], Opacity[1.]}], 
              FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1,
                3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}}}, {{{25.5, 2.5}, {
               25.5, 1.395}, {24.605, 0.5}, {23.5, 0.5}, {2.5, 0.5}, {1.395, 
               0.5}, {0.5, 1.395}, {0.5, 2.5}, {0.5, 23.5}, {0.5, 24.605}, {
               1.395, 25.5}, {2.5, 25.5}, {23.5, 25.5}, {24.605, 25.5}, {25.5,
                24.605}, {25.5, 23.5}, {25.5, 2.5}}}]}, 
             {RGBColor[0.7, 0.7, 0.7], Opacity[1.], JoinForm[{"Miter", 10.}], 
              JoinedCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1,
                3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}}}, {{{25.5, 2.5}, {
               25.5, 1.395}, {24.605, 0.5}, {23.5, 0.5}, {2.5, 0.5}, {1.395, 
               0.5}, {0.5, 1.395}, {0.5, 2.5}, {0.5, 23.5}, {0.5, 24.605}, {
               1.395, 25.5}, {2.5, 25.5}, {23.5, 25.5}, {24.605, 25.5}, {25.5,
                24.605}, {25.5, 23.5}, {25.5, 2.5}}},
               CurveClosed->{1}]}, 
             {FaceForm[{RGBColor[
              0.45999999999999996`, 0.45999999999999996`, 
               0.45999999999999996`], Opacity[1.]}], 
              FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
               11.020999999999999`, 15.084}, {14.979, 15.084}, {14.979, 
               20.542}, {11.020999999999999`, 20.542}}}]}, 
             {FaceForm[{RGBColor[0.7, 0.7, 0.7], Opacity[1.]}], 
              FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0,
                1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
               15.979000000000001`, 16.541999999999998`}, {
               10.020999999999999`, 16.541999999999998`}, {
               10.020999999999999`, 10.542}, {12.020999999999999`, 10.542}, {
               12.020999999999999`, 0.5}, {13.979000000000001`, 0.5}, {
               13.979000000000001`, 10.542}, {15.979000000000001`, 10.542}, {
               15.979000000000001`, 16.541999999999998`}}}]}},
            AspectRatio->Automatic,
            ImageSize->{Automatic, 
              Dynamic[3.5 CurrentValue["FontCapHeight"]]},
            PlotRange->{{0., 26.}, {0., 26.}}], GridBox[{
             {
              RowBox[{
               TagBox["\<\"Class: \"\>",
                "SummaryItemAnnotation"], "\[InvisibleSpace]", 
               TagBox["\<\"GPIO\"\>",
                "SummaryItem"]}], 
              RowBox[{
               TagBox["\<\"ID: \"\>",
                "SummaryItemAnnotation"], "\[InvisibleSpace]", 
               TagBox["1",
                "SummaryItem"]}]},
             {
              RowBox[{
               TagBox["\<\"Status: \"\>",
                "SummaryItemAnnotation"], "\[InvisibleSpace]", 
               TagBox[
                DynamicModuleBox[{Devices`DeviceAPI`DeviceDump`lights$$ = {
                  Style[
                   Graphics[{{
                    RGBColor[0.88, 1, 0.88], 
                    Disk[{0, 0}]}, {
                    RGBColor[0, 0.85, 0], 
                    Circle[{0, 0}]}}, PlotRange -> {-2.2, 1.1}, ImageSize -> 
                    9, ImageMargins -> {{3, 3}, {2, 0}}, 
                    BaseStyle -> {CacheGraphics -> False}], Selectable -> 
                   False], 
                  Style[
                   Graphics[{{
                    RGBColor[1, 1, 0], 
                    Disk[{0, 0}]}, {
                    RGBColor[0.8, 0.8, 0], 
                    Circle[{0, 0}]}}, PlotRange -> {-2.2, 1.1}, ImageSize -> 
                    9, ImageMargins -> {{3, 3}, {2, 0}}, 
                    BaseStyle -> {CacheGraphics -> False}], Selectable -> 
                   False]}, Devices`DeviceAPI`DeviceDump`opacities$$ = {
                  Opacity[1], 
                  Opacity[0.2]}, Devices`DeviceAPI`DeviceDump`status$$ = {
                 "Connected", "Not connected"}, 
                 Devices`DeviceAPI`DeviceDump`d$$ = DeviceObject[{"GPIO", 1}],
                  Devices`DeviceAPI`DeviceDump`ind$$ = 2, 
                 Devices`DeviceAPI`DeviceDump`indr$$ = 1}, 
                 DynamicBox[ToBoxes[Devices`DeviceAPI`DeviceDump`ind$$ = If[
                    DeviceOpenQ[Devices`DeviceAPI`DeviceDump`d$$], 1, 2]; 
                   Devices`DeviceAPI`DeviceDump`indr$$ = If[
                    DeviceFramework`DeviceRegisteredQ[
                    Devices`DeviceAPI`DeviceDump`d$$], 1, 2]; Style[
                    Row[{
                    Part[
                    Devices`DeviceAPI`DeviceDump`lights$$, 
                    Devices`DeviceAPI`DeviceDump`ind$$], 
                    Part[
                    Devices`DeviceAPI`DeviceDump`status$$, 
                    Devices`DeviceAPI`DeviceDump`ind$$]}], 
                    Part[
                    Devices`DeviceAPI`DeviceDump`opacities$$, 
                    Devices`DeviceAPI`DeviceDump`indr$$]], StandardForm],
                  ImageSizeCache->{95., {4., 10.}}],
                 DynamicModuleValues:>{}],
                "SummaryItem"]}], "\[SpanFromLeft]"}
            },
            AutoDelete->False,
            
            BaseStyle->{
             ShowStringCharacters -> False, NumberMarks -> False, 
              PrintPrecision -> 3, ShowSyntaxStyles -> False},
            GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
         },
         AutoDelete->False,
         BaselinePosition->{1, 1},
         GridBoxAlignment->{"Rows" -> {{Top}}},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True->
        GridBox[{
          {
           PaneBox[
            ButtonBox[
             
             DynamicBox[FEPrivate`FrontEndResource[
              "FEBitmaps", "SquareMinusIconMedium"]],
             Appearance->None,
             ButtonFunction:>(Typeset`open$$ = False),
             Evaluator->Automatic,
             Method->"Preemptive"],
            Alignment->{Center, Center},
            
            ImageSize->
             Dynamic[{
              Automatic, 3.5 CurrentValue["FontCapHeight"]/
               AbsoluteCurrentValue[Magnification]}]], 
           GraphicsBox[
            {Thickness[0.038461538461538464`], 
             {FaceForm[{RGBColor[1., 1., 1.], Opacity[1.]}], 
              FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1,
                3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}}}, {{{25.5, 2.5}, {
               25.5, 1.395}, {24.605, 0.5}, {23.5, 0.5}, {2.5, 0.5}, {1.395, 
               0.5}, {0.5, 1.395}, {0.5, 2.5}, {0.5, 23.5}, {0.5, 24.605}, {
               1.395, 25.5}, {2.5, 25.5}, {23.5, 25.5}, {24.605, 25.5}, {25.5,
                24.605}, {25.5, 23.5}, {25.5, 2.5}}}]}, 
             {RGBColor[0.7, 0.7, 0.7], Opacity[1.], JoinForm[{"Miter", 10.}], 
              JoinedCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1,
                3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}}}, {{{25.5, 2.5}, {
               25.5, 1.395}, {24.605, 0.5}, {23.5, 0.5}, {2.5, 0.5}, {1.395, 
               0.5}, {0.5, 1.395}, {0.5, 2.5}, {0.5, 23.5}, {0.5, 24.605}, {
               1.395, 25.5}, {2.5, 25.5}, {23.5, 25.5}, {24.605, 25.5}, {25.5,
                24.605}, {25.5, 23.5}, {25.5, 2.5}}},
               CurveClosed->{1}]}, 
             {FaceForm[{RGBColor[
              0.45999999999999996`, 0.45999999999999996`, 
               0.45999999999999996`], Opacity[1.]}], 
              FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
               11.020999999999999`, 15.084}, {14.979, 15.084}, {14.979, 
               20.542}, {11.020999999999999`, 20.542}}}]}, 
             {FaceForm[{RGBColor[0.7, 0.7, 0.7], Opacity[1.]}], 
              FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0,
                1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
               15.979000000000001`, 16.541999999999998`}, {
               10.020999999999999`, 16.541999999999998`}, {
               10.020999999999999`, 10.542}, {12.020999999999999`, 10.542}, {
               12.020999999999999`, 0.5}, {13.979000000000001`, 0.5}, {
               13.979000000000001`, 10.542}, {15.979000000000001`, 10.542}, {
               15.979000000000001`, 16.541999999999998`}}}]}},
            AspectRatio->Automatic,
            ImageSize->{Automatic, 
              Dynamic[3.5 CurrentValue["FontCapHeight"]]},
            PlotRange->{{0., 26.}, {0., 26.}}], GridBox[{
             {
              RowBox[{
               TagBox["\<\"Class: \"\>",
                "SummaryItemAnnotation"], "\[InvisibleSpace]", 
               TagBox["\<\"GPIO\"\>",
                "SummaryItem"]}], 
              RowBox[{
               TagBox["\<\"ID: \"\>",
                "SummaryItemAnnotation"], "\[InvisibleSpace]", 
               TagBox["1",
                "SummaryItem"]}]},
             {
              RowBox[{
               TagBox["\<\"Status: \"\>",
                "SummaryItemAnnotation"], "\[InvisibleSpace]", 
               TagBox[
                DynamicModuleBox[{Devices`DeviceAPI`DeviceDump`lights$$ = {
                  Style[
                   Graphics[{{
                    RGBColor[0.88, 1, 0.88], 
                    Disk[{0, 0}]}, {
                    RGBColor[0, 0.85, 0], 
                    Circle[{0, 0}]}}, PlotRange -> {-2.2, 1.1}, ImageSize -> 
                    9, ImageMargins -> {{3, 3}, {2, 0}}, 
                    BaseStyle -> {CacheGraphics -> False}], Selectable -> 
                   False], 
                  Style[
                   Graphics[{{
                    RGBColor[1, 1, 0], 
                    Disk[{0, 0}]}, {
                    RGBColor[0.8, 0.8, 0], 
                    Circle[{0, 0}]}}, PlotRange -> {-2.2, 1.1}, ImageSize -> 
                    9, ImageMargins -> {{3, 3}, {2, 0}}, 
                    BaseStyle -> {CacheGraphics -> False}], Selectable -> 
                   False]}, Devices`DeviceAPI`DeviceDump`opacities$$ = {
                  Opacity[1], 
                  Opacity[0.2]}, Devices`DeviceAPI`DeviceDump`status$$ = {
                 "Connected", "Not connected"}, 
                 Devices`DeviceAPI`DeviceDump`d$$ = DeviceObject[{"GPIO", 1}],
                  Devices`DeviceAPI`DeviceDump`ind$$, 
                 Devices`DeviceAPI`DeviceDump`indr$$}, 
                 DynamicBox[ToBoxes[Devices`DeviceAPI`DeviceDump`ind$$ = If[
                    DeviceOpenQ[Devices`DeviceAPI`DeviceDump`d$$], 1, 2]; 
                   Devices`DeviceAPI`DeviceDump`indr$$ = If[
                    DeviceFramework`DeviceRegisteredQ[
                    Devices`DeviceAPI`DeviceDump`d$$], 1, 2]; Style[
                    Row[{
                    Part[
                    Devices`DeviceAPI`DeviceDump`lights$$, 
                    Devices`DeviceAPI`DeviceDump`ind$$], 
                    Part[
                    Devices`DeviceAPI`DeviceDump`status$$, 
                    Devices`DeviceAPI`DeviceDump`ind$$]}], 
                    Part[
                    Devices`DeviceAPI`DeviceDump`opacities$$, 
                    Devices`DeviceAPI`DeviceDump`indr$$]], StandardForm]],
                 DynamicModuleValues:>{}],
                "SummaryItem"]}], "\[SpanFromLeft]"},
             {
              TagBox[
               DynamicModuleBox[{Devices`DeviceAPI`DeviceDump`opacities$$ = {
                 Opacity[1], 
                 Opacity[0.2]}, Devices`DeviceAPI`DeviceDump`d$$ = 
                DeviceObject[{"GPIO", 1}], 
                Devices`DeviceAPI`DeviceDump`props$$, 
                Devices`DeviceAPI`DeviceDump`vals$$, 
                Devices`DeviceAPI`DeviceDump`reg$$}, 
                
                DynamicBox[ToBoxes[
                 Devices`DeviceAPI`DeviceDump`reg$$ = 
                   DeviceFramework`DeviceRegisteredQ[
                    Devices`DeviceAPI`DeviceDump`d$$]; 
                  Devices`DeviceAPI`DeviceDump`props$$ = 
                   DeviceFramework`DeviceExternalProperties[
                    Devices`DeviceAPI`DeviceDump`d$$]; 
                  Devices`DeviceAPI`DeviceDump`vals$$ = 
                   Devices`DeviceAPI`DeviceDump`d$$[
                    Devices`DeviceAPI`DeviceDump`props$$]; Column[
                    Join[{
                    BoxForm`SummaryItem[{"Properties: ", 
                    If[
                    Or[
                    Not[Devices`DeviceAPI`DeviceDump`reg$$], 
                    Devices`DeviceAPI`DeviceDump`props$$ === {}], 
                    Style[None, 
                    Part[Devices`DeviceAPI`DeviceDump`opacities$$, 
                    If[Devices`DeviceAPI`DeviceDump`reg$$, 1, 2]]], ""]}]}, 
                    MapThread[BoxForm`SummaryItem[{
                    StringJoin["      ", 
                    ToString[#], ": "], #2}]& , {
                    Devices`DeviceAPI`DeviceDump`props$$, 
                    Devices`DeviceAPI`DeviceDump`vals$$}]]], StandardForm]],
                DynamicModuleValues:>{}],
               "SummaryItem"], "\[SpanFromLeft]"}
            },
            AutoDelete->False,
            
            BaseStyle->{
             ShowStringCharacters -> False, NumberMarks -> False, 
              PrintPrecision -> 3, ShowSyntaxStyles -> False},
            GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
         },
         AutoDelete->False,
         BaselinePosition->{1, 1},
         GridBoxAlignment->{"Rows" -> {{Top}}},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, Dynamic[
        Typeset`open$$],
        ImageSize->Automatic],
       BaselinePosition->Baseline],
      DynamicModuleValues:>{}], "]"}],
    DeviceObject[{"GPIO", 1}],
    Editable->False,
    SelectWithContents->True,
    Selectable->False], ",", 
   InterpretationBox[
    RowBox[{
     TagBox["DeviceObject",
      "SummaryHead"], "[", 
     DynamicModuleBox[{Typeset`open$$ = False}, 
      PanelBox[
       PaneSelectorBox[{False->GridBox[{
          {
           PaneBox[
            ButtonBox[
             
             DynamicBox[FEPrivate`FrontEndResource[
              "FEBitmaps", "SquarePlusIconMedium"],
              ImageSizeCache->{12., {0., 12.}}],
             Appearance->None,
             ButtonFunction:>(Typeset`open$$ = True),
             Evaluator->Automatic,
             Method->"Preemptive"],
            Alignment->{Center, Center},
            ImageSize->
             Dynamic[{
              Automatic, 3.5 CurrentValue["FontCapHeight"]/
               AbsoluteCurrentValue[Magnification]}]], 
           GraphicsBox[
            {Thickness[0.038461538461538464`], 
             {FaceForm[{RGBColor[1., 1., 1.], Opacity[1.]}], 
              FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1,
                3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}}}, {{{25.5, 2.5}, {
               25.5, 1.395}, {24.605, 0.5}, {23.5, 0.5}, {2.5, 0.5}, {1.395, 
               0.5}, {0.5, 1.395}, {0.5, 2.5}, {0.5, 23.5}, {0.5, 24.605}, {
               1.395, 25.5}, {2.5, 25.5}, {23.5, 25.5}, {24.605, 25.5}, {25.5,
                24.605}, {25.5, 23.5}, {25.5, 2.5}}}]}, 
             {RGBColor[0.7, 0.7, 0.7], Opacity[1.], JoinForm[{"Miter", 10.}], 
              JoinedCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1,
                3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}}}, {{{25.5, 2.5}, {
               25.5, 1.395}, {24.605, 0.5}, {23.5, 0.5}, {2.5, 0.5}, {1.395, 
               0.5}, {0.5, 1.395}, {0.5, 2.5}, {0.5, 23.5}, {0.5, 24.605}, {
               1.395, 25.5}, {2.5, 25.5}, {23.5, 25.5}, {24.605, 25.5}, {25.5,
                24.605}, {25.5, 23.5}, {25.5, 2.5}}},
               CurveClosed->{1}]}, 
             {FaceForm[{RGBColor[
              0.45999999999999996`, 0.45999999999999996`, 
               0.45999999999999996`], Opacity[1.]}], 
              FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
               11.020999999999999`, 15.084}, {14.979, 15.084}, {14.979, 
               20.542}, {11.020999999999999`, 20.542}}}]}, 
             {FaceForm[{RGBColor[0.7, 0.7, 0.7], Opacity[1.]}], 
              FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0,
                1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
               15.979000000000001`, 16.541999999999998`}, {
               10.020999999999999`, 16.541999999999998`}, {
               10.020999999999999`, 10.542}, {12.020999999999999`, 10.542}, {
               12.020999999999999`, 0.5}, {13.979000000000001`, 0.5}, {
               13.979000000000001`, 10.542}, {15.979000000000001`, 10.542}, {
               15.979000000000001`, 16.541999999999998`}}}]}},
            AspectRatio->Automatic,
            ImageSize->{Automatic, 
              Dynamic[3.5 CurrentValue["FontCapHeight"]]},
            PlotRange->{{0., 26.}, {0., 26.}}], GridBox[{
             {
              RowBox[{
               TagBox["\<\"Class: \"\>",
                "SummaryItemAnnotation"], "\[InvisibleSpace]", 
               TagBox["\<\"RandomSignalDemo\"\>",
                "SummaryItem"]}], 
              RowBox[{
               TagBox["\<\"ID: \"\>",
                "SummaryItemAnnotation"], "\[InvisibleSpace]", 
               TagBox["1",
                "SummaryItem"]}]},
             {
              RowBox[{
               TagBox["\<\"Status: \"\>",
                "SummaryItemAnnotation"], "\[InvisibleSpace]", 
               TagBox[
                DynamicModuleBox[{Devices`DeviceAPI`DeviceDump`lights$$ = {
                  Style[
                   Graphics[{{
                    RGBColor[0.88, 1, 0.88], 
                    Disk[{0, 0}]}, {
                    RGBColor[0, 0.85, 0], 
                    Circle[{0, 0}]}}, PlotRange -> {-2.2, 1.1}, ImageSize -> 
                    9, ImageMargins -> {{3, 3}, {2, 0}}, 
                    BaseStyle -> {CacheGraphics -> False}], Selectable -> 
                   False], 
                  Style[
                   Graphics[{{
                    RGBColor[1, 1, 0], 
                    Disk[{0, 0}]}, {
                    RGBColor[0.8, 0.8, 0], 
                    Circle[{0, 0}]}}, PlotRange -> {-2.2, 1.1}, ImageSize -> 
                    9, ImageMargins -> {{3, 3}, {2, 0}}, 
                    BaseStyle -> {CacheGraphics -> False}], Selectable -> 
                   False]}, Devices`DeviceAPI`DeviceDump`opacities$$ = {
                  Opacity[1], 
                  Opacity[0.2]}, Devices`DeviceAPI`DeviceDump`status$$ = {
                 "Connected", "Not connected"}, 
                 Devices`DeviceAPI`DeviceDump`d$$ = 
                 DeviceObject[{"RandomSignalDemo", 1}], 
                 Devices`DeviceAPI`DeviceDump`ind$$ = 2, 
                 Devices`DeviceAPI`DeviceDump`indr$$ = 1}, 
                 DynamicBox[ToBoxes[Devices`DeviceAPI`DeviceDump`ind$$ = If[
                    DeviceOpenQ[Devices`DeviceAPI`DeviceDump`d$$], 1, 2]; 
                   Devices`DeviceAPI`DeviceDump`indr$$ = If[
                    DeviceFramework`DeviceRegisteredQ[
                    Devices`DeviceAPI`DeviceDump`d$$], 1, 2]; Style[
                    Row[{
                    Part[
                    Devices`DeviceAPI`DeviceDump`lights$$, 
                    Devices`DeviceAPI`DeviceDump`ind$$], 
                    Part[
                    Devices`DeviceAPI`DeviceDump`status$$, 
                    Devices`DeviceAPI`DeviceDump`ind$$]}], 
                    Part[
                    Devices`DeviceAPI`DeviceDump`opacities$$, 
                    Devices`DeviceAPI`DeviceDump`indr$$]], StandardForm],
                  ImageSizeCache->{95., {4., 10.}}],
                 DynamicModuleValues:>{}],
                "SummaryItem"]}], "\[SpanFromLeft]"}
            },
            AutoDelete->False,
            
            BaseStyle->{
             ShowStringCharacters -> False, NumberMarks -> False, 
              PrintPrecision -> 3, ShowSyntaxStyles -> False},
            GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
         },
         AutoDelete->False,
         BaselinePosition->{1, 1},
         GridBoxAlignment->{"Rows" -> {{Top}}},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True->
        GridBox[{
          {
           PaneBox[
            ButtonBox[
             
             DynamicBox[FEPrivate`FrontEndResource[
              "FEBitmaps", "SquareMinusIconMedium"]],
             Appearance->None,
             ButtonFunction:>(Typeset`open$$ = False),
             Evaluator->Automatic,
             Method->"Preemptive"],
            Alignment->{Center, Center},
            
            ImageSize->
             Dynamic[{
              Automatic, 3.5 CurrentValue["FontCapHeight"]/
               AbsoluteCurrentValue[Magnification]}]], 
           GraphicsBox[
            {Thickness[0.038461538461538464`], 
             {FaceForm[{RGBColor[1., 1., 1.], Opacity[1.]}], 
              FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1,
                3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}}}, {{{25.5, 2.5}, {
               25.5, 1.395}, {24.605, 0.5}, {23.5, 0.5}, {2.5, 0.5}, {1.395, 
               0.5}, {0.5, 1.395}, {0.5, 2.5}, {0.5, 23.5}, {0.5, 24.605}, {
               1.395, 25.5}, {2.5, 25.5}, {23.5, 25.5}, {24.605, 25.5}, {25.5,
                24.605}, {25.5, 23.5}, {25.5, 2.5}}}]}, 
             {RGBColor[0.7, 0.7, 0.7], Opacity[1.], JoinForm[{"Miter", 10.}], 
              JoinedCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1,
                3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}}}, {{{25.5, 2.5}, {
               25.5, 1.395}, {24.605, 0.5}, {23.5, 0.5}, {2.5, 0.5}, {1.395, 
               0.5}, {0.5, 1.395}, {0.5, 2.5}, {0.5, 23.5}, {0.5, 24.605}, {
               1.395, 25.5}, {2.5, 25.5}, {23.5, 25.5}, {24.605, 25.5}, {25.5,
                24.605}, {25.5, 23.5}, {25.5, 2.5}}},
               CurveClosed->{1}]}, 
             {FaceForm[{RGBColor[
              0.45999999999999996`, 0.45999999999999996`, 
               0.45999999999999996`], Opacity[1.]}], 
              FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
               11.020999999999999`, 15.084}, {14.979, 15.084}, {14.979, 
               20.542}, {11.020999999999999`, 20.542}}}]}, 
             {FaceForm[{RGBColor[0.7, 0.7, 0.7], Opacity[1.]}], 
              FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0,
                1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
               15.979000000000001`, 16.541999999999998`}, {
               10.020999999999999`, 16.541999999999998`}, {
               10.020999999999999`, 10.542}, {12.020999999999999`, 10.542}, {
               12.020999999999999`, 0.5}, {13.979000000000001`, 0.5}, {
               13.979000000000001`, 10.542}, {15.979000000000001`, 10.542}, {
               15.979000000000001`, 16.541999999999998`}}}]}},
            AspectRatio->Automatic,
            ImageSize->{Automatic, 
              Dynamic[3.5 CurrentValue["FontCapHeight"]]},
            PlotRange->{{0., 26.}, {0., 26.}}], GridBox[{
             {
              RowBox[{
               TagBox["\<\"Class: \"\>",
                "SummaryItemAnnotation"], "\[InvisibleSpace]", 
               TagBox["\<\"RandomSignalDemo\"\>",
                "SummaryItem"]}], 
              RowBox[{
               TagBox["\<\"ID: \"\>",
                "SummaryItemAnnotation"], "\[InvisibleSpace]", 
               TagBox["1",
                "SummaryItem"]}]},
             {
              RowBox[{
               TagBox["\<\"Status: \"\>",
                "SummaryItemAnnotation"], "\[InvisibleSpace]", 
               TagBox[
                DynamicModuleBox[{Devices`DeviceAPI`DeviceDump`lights$$ = {
                  Style[
                   Graphics[{{
                    RGBColor[0.88, 1, 0.88], 
                    Disk[{0, 0}]}, {
                    RGBColor[0, 0.85, 0], 
                    Circle[{0, 0}]}}, PlotRange -> {-2.2, 1.1}, ImageSize -> 
                    9, ImageMargins -> {{3, 3}, {2, 0}}, 
                    BaseStyle -> {CacheGraphics -> False}], Selectable -> 
                   False], 
                  Style[
                   Graphics[{{
                    RGBColor[1, 1, 0], 
                    Disk[{0, 0}]}, {
                    RGBColor[0.8, 0.8, 0], 
                    Circle[{0, 0}]}}, PlotRange -> {-2.2, 1.1}, ImageSize -> 
                    9, ImageMargins -> {{3, 3}, {2, 0}}, 
                    BaseStyle -> {CacheGraphics -> False}], Selectable -> 
                   False]}, Devices`DeviceAPI`DeviceDump`opacities$$ = {
                  Opacity[1], 
                  Opacity[0.2]}, Devices`DeviceAPI`DeviceDump`status$$ = {
                 "Connected", "Not connected"}, 
                 Devices`DeviceAPI`DeviceDump`d$$ = 
                 DeviceObject[{"RandomSignalDemo", 1}], 
                 Devices`DeviceAPI`DeviceDump`ind$$, 
                 Devices`DeviceAPI`DeviceDump`indr$$}, 
                 DynamicBox[ToBoxes[Devices`DeviceAPI`DeviceDump`ind$$ = If[
                    DeviceOpenQ[Devices`DeviceAPI`DeviceDump`d$$], 1, 2]; 
                   Devices`DeviceAPI`DeviceDump`indr$$ = If[
                    DeviceFramework`DeviceRegisteredQ[
                    Devices`DeviceAPI`DeviceDump`d$$], 1, 2]; Style[
                    Row[{
                    Part[
                    Devices`DeviceAPI`DeviceDump`lights$$, 
                    Devices`DeviceAPI`DeviceDump`ind$$], 
                    Part[
                    Devices`DeviceAPI`DeviceDump`status$$, 
                    Devices`DeviceAPI`DeviceDump`ind$$]}], 
                    Part[
                    Devices`DeviceAPI`DeviceDump`opacities$$, 
                    Devices`DeviceAPI`DeviceDump`indr$$]], StandardForm]],
                 DynamicModuleValues:>{}],
                "SummaryItem"]}], "\[SpanFromLeft]"},
             {
              TagBox[
               DynamicModuleBox[{Devices`DeviceAPI`DeviceDump`opacities$$ = {
                 Opacity[1], 
                 Opacity[0.2]}, Devices`DeviceAPI`DeviceDump`d$$ = 
                DeviceObject[{"RandomSignalDemo", 1}], 
                Devices`DeviceAPI`DeviceDump`props$$, 
                Devices`DeviceAPI`DeviceDump`vals$$, 
                Devices`DeviceAPI`DeviceDump`reg$$}, 
                
                DynamicBox[ToBoxes[
                 Devices`DeviceAPI`DeviceDump`reg$$ = 
                   DeviceFramework`DeviceRegisteredQ[
                    Devices`DeviceAPI`DeviceDump`d$$]; 
                  Devices`DeviceAPI`DeviceDump`props$$ = 
                   DeviceFramework`DeviceExternalProperties[
                    Devices`DeviceAPI`DeviceDump`d$$]; 
                  Devices`DeviceAPI`DeviceDump`vals$$ = 
                   Devices`DeviceAPI`DeviceDump`d$$[
                    Devices`DeviceAPI`DeviceDump`props$$]; Column[
                    Join[{
                    BoxForm`SummaryItem[{"Properties: ", 
                    If[
                    Or[
                    Not[Devices`DeviceAPI`DeviceDump`reg$$], 
                    Devices`DeviceAPI`DeviceDump`props$$ === {}], 
                    Style[None, 
                    Part[Devices`DeviceAPI`DeviceDump`opacities$$, 
                    If[Devices`DeviceAPI`DeviceDump`reg$$, 1, 2]]], ""]}]}, 
                    MapThread[BoxForm`SummaryItem[{
                    StringJoin["      ", 
                    ToString[#], ": "], #2}]& , {
                    Devices`DeviceAPI`DeviceDump`props$$, 
                    Devices`DeviceAPI`DeviceDump`vals$$}]]], StandardForm]],
                DynamicModuleValues:>{}],
               "SummaryItem"], "\[SpanFromLeft]"}
            },
            AutoDelete->False,
            
            BaseStyle->{
             ShowStringCharacters -> False, NumberMarks -> False, 
              PrintPrecision -> 3, ShowSyntaxStyles -> False},
            GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
         },
         AutoDelete->False,
         BaselinePosition->{1, 1},
         GridBoxAlignment->{"Rows" -> {{Top}}},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, Dynamic[
        Typeset`open$$],
        ImageSize->Automatic],
       BaselinePosition->Baseline],
      DynamicModuleValues:>{}], "]"}],
    DeviceObject[{"RandomSignalDemo", 1}],
    Editable->False,
    SelectWithContents->True,
    Selectable->False], ",", 
   InterpretationBox[
    RowBox[{
     TagBox["DeviceObject",
      "SummaryHead"], "[", 
     DynamicModuleBox[{Typeset`open$$ = False}, 
      PanelBox[
       PaneSelectorBox[{False->GridBox[{
          {
           PaneBox[
            ButtonBox[
             
             DynamicBox[FEPrivate`FrontEndResource[
              "FEBitmaps", "SquarePlusIconMedium"],
              ImageSizeCache->{12., {0., 12.}}],
             Appearance->None,
             ButtonFunction:>(Typeset`open$$ = True),
             Evaluator->Automatic,
             Method->"Preemptive"],
            Alignment->{Center, Center},
            
            ImageSize->
             Dynamic[{
              Automatic, 3.5 CurrentValue["FontCapHeight"]/
               AbsoluteCurrentValue[Magnification]}]], 
           GraphicsBox[
            {Thickness[0.038461538461538464`], 
             {FaceForm[{RGBColor[1., 1., 1.], Opacity[1.]}], 
              FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1,
                3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}}}, {{{25.5, 2.5}, {
               25.5, 1.395}, {24.605, 0.5}, {23.5, 0.5}, {2.5, 0.5}, {1.395, 
               0.5}, {0.5, 1.395}, {0.5, 2.5}, {0.5, 23.5}, {0.5, 24.605}, {
               1.395, 25.5}, {2.5, 25.5}, {23.5, 25.5}, {24.605, 25.5}, {25.5,
                24.605}, {25.5, 23.5}, {25.5, 2.5}}}]}, 
             {RGBColor[0.7, 0.7, 0.7], Opacity[1.], JoinForm[{"Miter", 10.}], 
              JoinedCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1,
                3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}}}, {{{25.5, 2.5}, {
               25.5, 1.395}, {24.605, 0.5}, {23.5, 0.5}, {2.5, 0.5}, {1.395, 
               0.5}, {0.5, 1.395}, {0.5, 2.5}, {0.5, 23.5}, {0.5, 24.605}, {
               1.395, 25.5}, {2.5, 25.5}, {23.5, 25.5}, {24.605, 25.5}, {25.5,
                24.605}, {25.5, 23.5}, {25.5, 2.5}}},
               CurveClosed->{1}]}, 
             {FaceForm[{RGBColor[
              0.45999999999999996`, 0.45999999999999996`, 
               0.45999999999999996`], Opacity[1.]}], 
              FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
               11.020999999999999`, 15.084}, {14.979, 15.084}, {14.979, 
               20.542}, {11.020999999999999`, 20.542}}}]}, 
             {FaceForm[{RGBColor[0.7, 0.7, 0.7], Opacity[1.]}], 
              FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0,
                1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
               15.979000000000001`, 16.541999999999998`}, {
               10.020999999999999`, 16.541999999999998`}, {
               10.020999999999999`, 10.542}, {12.020999999999999`, 10.542}, {
               12.020999999999999`, 0.5}, {13.979000000000001`, 0.5}, {
               13.979000000000001`, 10.542}, {15.979000000000001`, 10.542}, {
               15.979000000000001`, 16.541999999999998`}}}]}},
            AspectRatio->Automatic,
            ImageSize->{Automatic, 
              Dynamic[3.5 CurrentValue["FontCapHeight"]]},
            PlotRange->{{0., 26.}, {0., 26.}}], GridBox[{
             {
              RowBox[{
               TagBox["\<\"Class: \"\>",
                "SummaryItemAnnotation"], "\[InvisibleSpace]", 
               TagBox["\<\"RaspberryPiWeatherStation\"\>",
                "SummaryItem"]}], 
              RowBox[{
               TagBox["\<\"ID: \"\>",
                "SummaryItemAnnotation"], "\[InvisibleSpace]", 
               TagBox["1",
                "SummaryItem"]}]},
             {
              RowBox[{
               TagBox["\<\"Status: \"\>",
                "SummaryItemAnnotation"], "\[InvisibleSpace]", 
               TagBox[
                DynamicModuleBox[{Devices`DeviceAPI`DeviceDump`lights$$ = {
                  Style[
                   Graphics[{{
                    RGBColor[0.88, 1, 0.88], 
                    Disk[{0, 0}]}, {
                    RGBColor[0, 0.85, 0], 
                    Circle[{0, 0}]}}, PlotRange -> {-2.2, 1.1}, ImageSize -> 
                    9, ImageMargins -> {{3, 3}, {2, 0}}, 
                    BaseStyle -> {CacheGraphics -> False}], Selectable -> 
                   False], 
                  Style[
                   Graphics[{{
                    RGBColor[1, 1, 0], 
                    Disk[{0, 0}]}, {
                    RGBColor[0.8, 0.8, 0], 
                    Circle[{0, 0}]}}, PlotRange -> {-2.2, 1.1}, ImageSize -> 
                    9, ImageMargins -> {{3, 3}, {2, 0}}, 
                    BaseStyle -> {CacheGraphics -> False}], Selectable -> 
                   False]}, Devices`DeviceAPI`DeviceDump`opacities$$ = {
                  Opacity[1], 
                  Opacity[0.2]}, Devices`DeviceAPI`DeviceDump`status$$ = {
                 "Connected", "Not connected"}, 
                 Devices`DeviceAPI`DeviceDump`d$$ = 
                 DeviceObject[{"RaspberryPiWeatherStation", 1}], 
                 Devices`DeviceAPI`DeviceDump`ind$$ = 2, 
                 Devices`DeviceAPI`DeviceDump`indr$$ = 1}, 
                 DynamicBox[ToBoxes[Devices`DeviceAPI`DeviceDump`ind$$ = If[
                    DeviceOpenQ[Devices`DeviceAPI`DeviceDump`d$$], 1, 2]; 
                   Devices`DeviceAPI`DeviceDump`indr$$ = If[
                    DeviceFramework`DeviceRegisteredQ[
                    Devices`DeviceAPI`DeviceDump`d$$], 1, 2]; Style[
                    Row[{
                    Part[
                    Devices`DeviceAPI`DeviceDump`lights$$, 
                    Devices`DeviceAPI`DeviceDump`ind$$], 
                    Part[
                    Devices`DeviceAPI`DeviceDump`status$$, 
                    Devices`DeviceAPI`DeviceDump`ind$$]}], 
                    Part[
                    Devices`DeviceAPI`DeviceDump`opacities$$, 
                    Devices`DeviceAPI`DeviceDump`indr$$]], StandardForm],
                  ImageSizeCache->{95., {4., 10.}}],
                 DynamicModuleValues:>{}],
                "SummaryItem"]}], "\[SpanFromLeft]"}
            },
            AutoDelete->False,
            
            BaseStyle->{
             ShowStringCharacters -> False, NumberMarks -> False, 
              PrintPrecision -> 3, ShowSyntaxStyles -> False},
            GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
         },
         AutoDelete->False,
         BaselinePosition->{1, 1},
         GridBoxAlignment->{"Rows" -> {{Top}}},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True->
        GridBox[{
          {
           PaneBox[
            ButtonBox[
             
             DynamicBox[FEPrivate`FrontEndResource[
              "FEBitmaps", "SquareMinusIconMedium"]],
             Appearance->None,
             ButtonFunction:>(Typeset`open$$ = False),
             Evaluator->Automatic,
             Method->"Preemptive"],
            Alignment->{Center, Center},
            
            ImageSize->
             Dynamic[{
              Automatic, 3.5 CurrentValue["FontCapHeight"]/
               AbsoluteCurrentValue[Magnification]}]], 
           GraphicsBox[
            {Thickness[0.038461538461538464`], 
             {FaceForm[{RGBColor[1., 1., 1.], Opacity[1.]}], 
              FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1,
                3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}}}, {{{25.5, 2.5}, {
               25.5, 1.395}, {24.605, 0.5}, {23.5, 0.5}, {2.5, 0.5}, {1.395, 
               0.5}, {0.5, 1.395}, {0.5, 2.5}, {0.5, 23.5}, {0.5, 24.605}, {
               1.395, 25.5}, {2.5, 25.5}, {23.5, 25.5}, {24.605, 25.5}, {25.5,
                24.605}, {25.5, 23.5}, {25.5, 2.5}}}]}, 
             {RGBColor[0.7, 0.7, 0.7], Opacity[1.], JoinForm[{"Miter", 10.}], 
              JoinedCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1,
                3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}}}, {{{25.5, 2.5}, {
               25.5, 1.395}, {24.605, 0.5}, {23.5, 0.5}, {2.5, 0.5}, {1.395, 
               0.5}, {0.5, 1.395}, {0.5, 2.5}, {0.5, 23.5}, {0.5, 24.605}, {
               1.395, 25.5}, {2.5, 25.5}, {23.5, 25.5}, {24.605, 25.5}, {25.5,
                24.605}, {25.5, 23.5}, {25.5, 2.5}}},
               CurveClosed->{1}]}, 
             {FaceForm[{RGBColor[
              0.45999999999999996`, 0.45999999999999996`, 
               0.45999999999999996`], Opacity[1.]}], 
              FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
               11.020999999999999`, 15.084}, {14.979, 15.084}, {14.979, 
               20.542}, {11.020999999999999`, 20.542}}}]}, 
             {FaceForm[{RGBColor[0.7, 0.7, 0.7], Opacity[1.]}], 
              FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0,
                1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
               15.979000000000001`, 16.541999999999998`}, {
               10.020999999999999`, 16.541999999999998`}, {
               10.020999999999999`, 10.542}, {12.020999999999999`, 10.542}, {
               12.020999999999999`, 0.5}, {13.979000000000001`, 0.5}, {
               13.979000000000001`, 10.542}, {15.979000000000001`, 10.542}, {
               15.979000000000001`, 16.541999999999998`}}}]}},
            AspectRatio->Automatic,
            ImageSize->{Automatic, 
              Dynamic[3.5 CurrentValue["FontCapHeight"]]},
            PlotRange->{{0., 26.}, {0., 26.}}], GridBox[{
             {
              RowBox[{
               TagBox["\<\"Class: \"\>",
                "SummaryItemAnnotation"], "\[InvisibleSpace]", 
               TagBox["\<\"RaspberryPiWeatherStation\"\>",
                "SummaryItem"]}], 
              RowBox[{
               TagBox["\<\"ID: \"\>",
                "SummaryItemAnnotation"], "\[InvisibleSpace]", 
               TagBox["1",
                "SummaryItem"]}]},
             {
              RowBox[{
               TagBox["\<\"Status: \"\>",
                "SummaryItemAnnotation"], "\[InvisibleSpace]", 
               TagBox[
                DynamicModuleBox[{Devices`DeviceAPI`DeviceDump`lights$$ = {
                  Style[
                   Graphics[{{
                    RGBColor[0.88, 1, 0.88], 
                    Disk[{0, 0}]}, {
                    RGBColor[0, 0.85, 0], 
                    Circle[{0, 0}]}}, PlotRange -> {-2.2, 1.1}, ImageSize -> 
                    9, ImageMargins -> {{3, 3}, {2, 0}}, 
                    BaseStyle -> {CacheGraphics -> False}], Selectable -> 
                   False], 
                  Style[
                   Graphics[{{
                    RGBColor[1, 1, 0], 
                    Disk[{0, 0}]}, {
                    RGBColor[0.8, 0.8, 0], 
                    Circle[{0, 0}]}}, PlotRange -> {-2.2, 1.1}, ImageSize -> 
                    9, ImageMargins -> {{3, 3}, {2, 0}}, 
                    BaseStyle -> {CacheGraphics -> False}], Selectable -> 
                   False]}, Devices`DeviceAPI`DeviceDump`opacities$$ = {
                  Opacity[1], 
                  Opacity[0.2]}, Devices`DeviceAPI`DeviceDump`status$$ = {
                 "Connected", "Not connected"}, 
                 Devices`DeviceAPI`DeviceDump`d$$ = 
                 DeviceObject[{"RaspberryPiWeatherStation", 1}], 
                 Devices`DeviceAPI`DeviceDump`ind$$, 
                 Devices`DeviceAPI`DeviceDump`indr$$}, 
                 DynamicBox[ToBoxes[Devices`DeviceAPI`DeviceDump`ind$$ = If[
                    DeviceOpenQ[Devices`DeviceAPI`DeviceDump`d$$], 1, 2]; 
                   Devices`DeviceAPI`DeviceDump`indr$$ = If[
                    DeviceFramework`DeviceRegisteredQ[
                    Devices`DeviceAPI`DeviceDump`d$$], 1, 2]; Style[
                    Row[{
                    Part[
                    Devices`DeviceAPI`DeviceDump`lights$$, 
                    Devices`DeviceAPI`DeviceDump`ind$$], 
                    Part[
                    Devices`DeviceAPI`DeviceDump`status$$, 
                    Devices`DeviceAPI`DeviceDump`ind$$]}], 
                    Part[
                    Devices`DeviceAPI`DeviceDump`opacities$$, 
                    Devices`DeviceAPI`DeviceDump`indr$$]], StandardForm]],
                 DynamicModuleValues:>{}],
                "SummaryItem"]}], "\[SpanFromLeft]"},
             {
              TagBox[
               DynamicModuleBox[{Devices`DeviceAPI`DeviceDump`opacities$$ = {
                 Opacity[1], 
                 Opacity[0.2]}, Devices`DeviceAPI`DeviceDump`d$$ = 
                DeviceObject[{"RaspberryPiWeatherStation", 1}], 
                Devices`DeviceAPI`DeviceDump`props$$, 
                Devices`DeviceAPI`DeviceDump`vals$$, 
                Devices`DeviceAPI`DeviceDump`reg$$}, 
                
                DynamicBox[ToBoxes[
                 Devices`DeviceAPI`DeviceDump`reg$$ = 
                   DeviceFramework`DeviceRegisteredQ[
                    Devices`DeviceAPI`DeviceDump`d$$]; 
                  Devices`DeviceAPI`DeviceDump`props$$ = 
                   DeviceFramework`DeviceExternalProperties[
                    Devices`DeviceAPI`DeviceDump`d$$]; 
                  Devices`DeviceAPI`DeviceDump`vals$$ = 
                   Devices`DeviceAPI`DeviceDump`d$$[
                    Devices`DeviceAPI`DeviceDump`props$$]; Column[
                    Join[{
                    BoxForm`SummaryItem[{"Properties: ", 
                    If[
                    Or[
                    Not[Devices`DeviceAPI`DeviceDump`reg$$], 
                    Devices`DeviceAPI`DeviceDump`props$$ === {}], 
                    Style[None, 
                    Part[Devices`DeviceAPI`DeviceDump`opacities$$, 
                    If[Devices`DeviceAPI`DeviceDump`reg$$, 1, 2]]], ""]}]}, 
                    MapThread[BoxForm`SummaryItem[{
                    StringJoin["      ", 
                    ToString[#], ": "], #2}]& , {
                    Devices`DeviceAPI`DeviceDump`props$$, 
                    Devices`DeviceAPI`DeviceDump`vals$$}]]], StandardForm]],
                DynamicModuleValues:>{}],
               "SummaryItem"], "\[SpanFromLeft]"}
            },
            AutoDelete->False,
            BaseStyle->{
             ShowStringCharacters -> False, NumberMarks -> False, 
              PrintPrecision -> 3, ShowSyntaxStyles -> False},
            GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
         },
         AutoDelete->False,
         BaselinePosition->{1, 1},
         GridBoxAlignment->{"Rows" -> {{Top}}},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, Dynamic[
        Typeset`open$$],
        ImageSize->Automatic],
       BaselinePosition->Baseline],
      DynamicModuleValues:>{}], "]"}],
    DeviceObject[{"RaspberryPiWeatherStation", 1}],
    Editable->False,
    SelectWithContents->True,
    Selectable->False], ",", 
   InterpretationBox[
    RowBox[{
     TagBox["DeviceObject",
      "SummaryHead"], "[", 
     DynamicModuleBox[{Typeset`open$$ = True}, 
      PanelBox[
       PaneSelectorBox[{False->GridBox[{
          {
           PaneBox[
            ButtonBox[
             
             DynamicBox[FEPrivate`FrontEndResource[
              "FEBitmaps", "SquarePlusIconMedium"],
              ImageSizeCache->{12., {0., 12.}}],
             Appearance->None,
             ButtonFunction:>(Typeset`open$$ = True),
             Evaluator->Automatic,
             Method->"Preemptive"],
            Alignment->{Center, Center},
            
            ImageSize->
             Dynamic[{
              Automatic, 3.5 CurrentValue["FontCapHeight"]/
               AbsoluteCurrentValue[Magnification]}]], 
           GraphicsBox[
            {Thickness[0.038461538461538464`], 
             {FaceForm[{RGBColor[1., 1., 1.], Opacity[1.]}], 
              FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1,
                3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}}}, {{{25.5, 2.5}, {
               25.5, 1.395}, {24.605, 0.5}, {23.5, 0.5}, {2.5, 0.5}, {1.395, 
               0.5}, {0.5, 1.395}, {0.5, 2.5}, {0.5, 23.5}, {0.5, 24.605}, {
               1.395, 25.5}, {2.5, 25.5}, {23.5, 25.5}, {24.605, 25.5}, {25.5,
                24.605}, {25.5, 23.5}, {25.5, 2.5}}}]}, 
             {RGBColor[0.7, 0.7, 0.7], Opacity[1.], JoinForm[{"Miter", 10.}], 
              JoinedCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1,
                3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}}}, {{{25.5, 2.5}, {
               25.5, 1.395}, {24.605, 0.5}, {23.5, 0.5}, {2.5, 0.5}, {1.395, 
               0.5}, {0.5, 1.395}, {0.5, 2.5}, {0.5, 23.5}, {0.5, 24.605}, {
               1.395, 25.5}, {2.5, 25.5}, {23.5, 25.5}, {24.605, 25.5}, {25.5,
                24.605}, {25.5, 23.5}, {25.5, 2.5}}},
               CurveClosed->{1}]}, 
             {FaceForm[{RGBColor[
              0.45999999999999996`, 0.45999999999999996`, 
               0.45999999999999996`], Opacity[1.]}], 
              FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
               11.020999999999999`, 15.084}, {14.979, 15.084}, {14.979, 
               20.542}, {11.020999999999999`, 20.542}}}]}, 
             {FaceForm[{RGBColor[0.7, 0.7, 0.7], Opacity[1.]}], 
              FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0,
                1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
               15.979000000000001`, 16.541999999999998`}, {
               10.020999999999999`, 16.541999999999998`}, {
               10.020999999999999`, 10.542}, {12.020999999999999`, 10.542}, {
               12.020999999999999`, 0.5}, {13.979000000000001`, 0.5}, {
               13.979000000000001`, 10.542}, {15.979000000000001`, 10.542}, {
               15.979000000000001`, 16.541999999999998`}}}]}},
            AspectRatio->Automatic,
            ImageSize->{Automatic, 
              Dynamic[3.5 CurrentValue["FontCapHeight"]]},
            PlotRange->{{0., 26.}, {0., 26.}}], GridBox[{
             {
              RowBox[{
               TagBox["\<\"Class: \"\>",
                "SummaryItemAnnotation"], "\[InvisibleSpace]", 
               TagBox["\<\"WriteDemo\"\>",
                "SummaryItem"]}], 
              RowBox[{
               TagBox["\<\"ID: \"\>",
                "SummaryItemAnnotation"], "\[InvisibleSpace]", 
               TagBox["1",
                "SummaryItem"]}]},
             {
              RowBox[{
               TagBox["\<\"Status: \"\>",
                "SummaryItemAnnotation"], "\[InvisibleSpace]", 
               TagBox[
                DynamicModuleBox[{Devices`DeviceAPI`DeviceDump`lights$$ = {
                  Style[
                   Graphics[{{
                    RGBColor[0.88, 1, 0.88], 
                    Disk[{0, 0}]}, {
                    RGBColor[0, 0.85, 0], 
                    Circle[{0, 0}]}}, PlotRange -> {-2.2, 1.1}, ImageSize -> 
                    9, ImageMargins -> {{3, 3}, {2, 0}}, 
                    BaseStyle -> {CacheGraphics -> False}], Selectable -> 
                   False], 
                  Style[
                   Graphics[{{
                    RGBColor[1, 1, 0], 
                    Disk[{0, 0}]}, {
                    RGBColor[0.8, 0.8, 0], 
                    Circle[{0, 0}]}}, PlotRange -> {-2.2, 1.1}, ImageSize -> 
                    9, ImageMargins -> {{3, 3}, {2, 0}}, 
                    BaseStyle -> {CacheGraphics -> False}], Selectable -> 
                   False]}, Devices`DeviceAPI`DeviceDump`opacities$$ = {
                  Opacity[1], 
                  Opacity[0.2]}, Devices`DeviceAPI`DeviceDump`status$$ = {
                 "Connected", "Not connected"}, 
                 Devices`DeviceAPI`DeviceDump`d$$ = 
                 DeviceObject[{"WriteDemo", 1}], 
                 Devices`DeviceAPI`DeviceDump`ind$$ = 2, 
                 Devices`DeviceAPI`DeviceDump`indr$$ = 1}, 
                 DynamicBox[ToBoxes[Devices`DeviceAPI`DeviceDump`ind$$ = If[
                    DeviceOpenQ[Devices`DeviceAPI`DeviceDump`d$$], 1, 2]; 
                   Devices`DeviceAPI`DeviceDump`indr$$ = If[
                    DeviceFramework`DeviceRegisteredQ[
                    Devices`DeviceAPI`DeviceDump`d$$], 1, 2]; Style[
                    Row[{
                    Part[
                    Devices`DeviceAPI`DeviceDump`lights$$, 
                    Devices`DeviceAPI`DeviceDump`ind$$], 
                    Part[
                    Devices`DeviceAPI`DeviceDump`status$$, 
                    Devices`DeviceAPI`DeviceDump`ind$$]}], 
                    Part[
                    Devices`DeviceAPI`DeviceDump`opacities$$, 
                    Devices`DeviceAPI`DeviceDump`indr$$]], StandardForm],
                  ImageSizeCache->{95., {4., 10.}}],
                 DynamicModuleValues:>{}],
                "SummaryItem"]}], "\[SpanFromLeft]"}
            },
            AutoDelete->False,
            
            BaseStyle->{
             ShowStringCharacters -> False, NumberMarks -> False, 
              PrintPrecision -> 3, ShowSyntaxStyles -> False},
            GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
         },
         AutoDelete->False,
         BaselinePosition->{1, 1},
         GridBoxAlignment->{"Rows" -> {{Top}}},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True->
        GridBox[{
          {
           PaneBox[
            ButtonBox[
             
             DynamicBox[FEPrivate`FrontEndResource[
              "FEBitmaps", "SquareMinusIconMedium"],
              ImageSizeCache->{12., {0., 12.}}],
             Appearance->None,
             ButtonFunction:>(Typeset`open$$ = False),
             Evaluator->Automatic,
             Method->"Preemptive"],
            Alignment->{Center, Center},
            
            ImageSize->
             Dynamic[{
              Automatic, 3.5 CurrentValue["FontCapHeight"]/
               AbsoluteCurrentValue[Magnification]}]], 
           GraphicsBox[
            {Thickness[0.038461538461538464`], 
             {FaceForm[{RGBColor[1., 1., 1.], Opacity[1.]}], 
              FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1,
                3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}}}, {{{25.5, 2.5}, {
               25.5, 1.395}, {24.605, 0.5}, {23.5, 0.5}, {2.5, 0.5}, {1.395, 
               0.5}, {0.5, 1.395}, {0.5, 2.5}, {0.5, 23.5}, {0.5, 24.605}, {
               1.395, 25.5}, {2.5, 25.5}, {23.5, 25.5}, {24.605, 25.5}, {25.5,
                24.605}, {25.5, 23.5}, {25.5, 2.5}}}]}, 
             {RGBColor[0.7, 0.7, 0.7], Opacity[1.], JoinForm[{"Miter", 10.}], 
              JoinedCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1,
                3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}}}, {{{25.5, 2.5}, {
               25.5, 1.395}, {24.605, 0.5}, {23.5, 0.5}, {2.5, 0.5}, {1.395, 
               0.5}, {0.5, 1.395}, {0.5, 2.5}, {0.5, 23.5}, {0.5, 24.605}, {
               1.395, 25.5}, {2.5, 25.5}, {23.5, 25.5}, {24.605, 25.5}, {25.5,
                24.605}, {25.5, 23.5}, {25.5, 2.5}}},
               CurveClosed->{1}]}, 
             {FaceForm[{RGBColor[
              0.45999999999999996`, 0.45999999999999996`, 
               0.45999999999999996`], Opacity[1.]}], 
              FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
               11.020999999999999`, 15.084}, {14.979, 15.084}, {14.979, 
               20.542}, {11.020999999999999`, 20.542}}}]}, 
             {FaceForm[{RGBColor[0.7, 0.7, 0.7], Opacity[1.]}], 
              FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0,
                1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
               15.979000000000001`, 16.541999999999998`}, {
               10.020999999999999`, 16.541999999999998`}, {
               10.020999999999999`, 10.542}, {12.020999999999999`, 10.542}, {
               12.020999999999999`, 0.5}, {13.979000000000001`, 0.5}, {
               13.979000000000001`, 10.542}, {15.979000000000001`, 10.542}, {
               15.979000000000001`, 16.541999999999998`}}}]}},
            AspectRatio->Automatic,
            ImageSize->{Automatic, 
              Dynamic[3.5 CurrentValue["FontCapHeight"]]},
            PlotRange->{{0., 26.}, {0., 26.}}], GridBox[{
             {
              RowBox[{
               TagBox["\<\"Class: \"\>",
                "SummaryItemAnnotation"], "\[InvisibleSpace]", 
               TagBox["\<\"WriteDemo\"\>",
                "SummaryItem"]}], 
              RowBox[{
               TagBox["\<\"ID: \"\>",
                "SummaryItemAnnotation"], "\[InvisibleSpace]", 
               TagBox["1",
                "SummaryItem"]}]},
             {
              RowBox[{
               TagBox["\<\"Status: \"\>",
                "SummaryItemAnnotation"], "\[InvisibleSpace]", 
               TagBox[
                DynamicModuleBox[{Devices`DeviceAPI`DeviceDump`lights$$ = {
                  Style[
                   Graphics[{{
                    RGBColor[0.88, 1, 0.88], 
                    Disk[{0, 0}]}, {
                    RGBColor[0, 0.85, 0], 
                    Circle[{0, 0}]}}, PlotRange -> {-2.2, 1.1}, ImageSize -> 
                    9, ImageMargins -> {{3, 3}, {2, 0}}, 
                    BaseStyle -> {CacheGraphics -> False}], Selectable -> 
                   False], 
                  Style[
                   Graphics[{{
                    RGBColor[1, 1, 0], 
                    Disk[{0, 0}]}, {
                    RGBColor[0.8, 0.8, 0], 
                    Circle[{0, 0}]}}, PlotRange -> {-2.2, 1.1}, ImageSize -> 
                    9, ImageMargins -> {{3, 3}, {2, 0}}, 
                    BaseStyle -> {CacheGraphics -> False}], Selectable -> 
                   False]}, Devices`DeviceAPI`DeviceDump`opacities$$ = {
                  Opacity[1], 
                  Opacity[0.2]}, Devices`DeviceAPI`DeviceDump`status$$ = {
                 "Connected", "Not connected"}, 
                 Devices`DeviceAPI`DeviceDump`d$$ = 
                 DeviceObject[{"WriteDemo", 1}], 
                 Devices`DeviceAPI`DeviceDump`ind$$ = 2, 
                 Devices`DeviceAPI`DeviceDump`indr$$ = 1}, 
                 DynamicBox[ToBoxes[Devices`DeviceAPI`DeviceDump`ind$$ = If[
                    DeviceOpenQ[Devices`DeviceAPI`DeviceDump`d$$], 1, 2]; 
                   Devices`DeviceAPI`DeviceDump`indr$$ = If[
                    DeviceFramework`DeviceRegisteredQ[
                    Devices`DeviceAPI`DeviceDump`d$$], 1, 2]; Style[
                    Row[{
                    Part[
                    Devices`DeviceAPI`DeviceDump`lights$$, 
                    Devices`DeviceAPI`DeviceDump`ind$$], 
                    Part[
                    Devices`DeviceAPI`DeviceDump`status$$, 
                    Devices`DeviceAPI`DeviceDump`ind$$]}], 
                    Part[
                    Devices`DeviceAPI`DeviceDump`opacities$$, 
                    Devices`DeviceAPI`DeviceDump`indr$$]], StandardForm],
                  ImageSizeCache->{95., {4., 10.}}],
                 DynamicModuleValues:>{}],
                "SummaryItem"]}], "\[SpanFromLeft]"},
             {
              TagBox[
               DynamicModuleBox[{Devices`DeviceAPI`DeviceDump`opacities$$ = {
                 Opacity[1], 
                 Opacity[0.2]}, Devices`DeviceAPI`DeviceDump`d$$ = 
                DeviceObject[{"WriteDemo", 1}], 
                Devices`DeviceAPI`DeviceDump`props$$ = {}, 
                Devices`DeviceAPI`DeviceDump`vals$$ = {}, 
                Devices`DeviceAPI`DeviceDump`reg$$ = True}, 
                
                DynamicBox[ToBoxes[
                 Devices`DeviceAPI`DeviceDump`reg$$ = 
                   DeviceFramework`DeviceRegisteredQ[
                    Devices`DeviceAPI`DeviceDump`d$$]; 
                  Devices`DeviceAPI`DeviceDump`props$$ = 
                   DeviceFramework`DeviceExternalProperties[
                    Devices`DeviceAPI`DeviceDump`d$$]; 
                  Devices`DeviceAPI`DeviceDump`vals$$ = 
                   Devices`DeviceAPI`DeviceDump`d$$[
                    Devices`DeviceAPI`DeviceDump`props$$]; Column[
                    Join[{
                    BoxForm`SummaryItem[{"Properties: ", 
                    If[
                    Or[
                    Not[Devices`DeviceAPI`DeviceDump`reg$$], 
                    Devices`DeviceAPI`DeviceDump`props$$ === {}], 
                    Style[None, 
                    Part[Devices`DeviceAPI`DeviceDump`opacities$$, 
                    If[Devices`DeviceAPI`DeviceDump`reg$$, 1, 2]]], ""]}]}, 
                    MapThread[BoxForm`SummaryItem[{
                    StringJoin["      ", 
                    ToString[#], ": "], #2}]& , {
                    Devices`DeviceAPI`DeviceDump`props$$, 
                    Devices`DeviceAPI`DeviceDump`vals$$}]]], StandardForm],
                 ImageSizeCache->{95., {3., 9.}}],
                DynamicModuleValues:>{}],
               "SummaryItem"], "\[SpanFromLeft]"}
            },
            AutoDelete->False,
            
            BaseStyle->{
             ShowStringCharacters -> False, NumberMarks -> False, 
              PrintPrecision -> 3, ShowSyntaxStyles -> False},
            GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
         },
         AutoDelete->False,
         BaselinePosition->{1, 1},
         GridBoxAlignment->{"Rows" -> {{Top}}},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, Dynamic[
        Typeset`open$$],
        ImageSize->Automatic],
       BaselinePosition->Baseline],
      DynamicModuleValues:>{}], "]"}],
    DeviceObject[{"WriteDemo", 1}],
    Editable->False,
    SelectWithContents->True,
    Selectable->False]}], "}"}]], "Output",
 CellChangeTimes->{3.6740878322282877`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"weather", "=", 
  RowBox[{
  "DeviceClose", "[", "\"\<RaspberryPiWeatherStation\>\"", "]"}]}]], "Input",
 CellChangeTimes->{{3.674088006627781*^9, 3.67408805135707*^9}, {
   3.6740881153283653`*^9, 3.674088120749919*^9}, 3.674088169198851*^9, {
   3.674088491033527*^9, 3.674088491813525*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DeviceRead", "[", 
  RowBox[{"weather", ",", "\"\<Pressure\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.674088106394907*^9, 3.6740881469293756`*^9}, {
  3.674088221809379*^9, 3.674088223179064*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Join", "::", "heads"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Heads \[NoBreak]\\!\\(\\*RowBox[{\\\"List\\\"}]\\)\
\[NoBreak] and \
\[NoBreak]\\!\\(\\*RowBox[{\\\"IntegerDigits\\\"}]\\)\[NoBreak] at positions \
\[NoBreak]\\!\\(\\*RowBox[{\\\"1\\\"}]\\)\[NoBreak] and \
\[NoBreak]\\!\\(\\*RowBox[{\\\"2\\\"}]\\)\[NoBreak] are expected to be the \
same.\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.674088179543748*^9, 3.674088224747323*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"FromDigits", "::", "nlst"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The expression \[NoBreak]\\!\\(\\*RowBox[{\\\"Join\\\", \\\
\"[\\\", RowBox[{RowBox[{\\\"{\\\", RowBox[{\\\"1\\\", \\\",\\\", \\\"1\\\", \
\\\",\\\", \\\"0\\\"}], \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"IntegerDigits\\\", \\\"[\\\", \
RowBox[{\\\"\\\\\\\"LIBRARY_FUNCTION_ERROR\\\\\\\"\\\", \\\",\\\", \
\\\"2\\\"}], \\\"]\\\"}]}], \\\"]\\\"}]\\)\[NoBreak] is not a list of digits \
or a string of valid digits.\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.674088179543748*^9, 3.674088225040621*^9}],

Cell[BoxData[
 TemplateBox[{RowBox[{"FromDigits", "[", 
     RowBox[{
       RowBox[{"Join", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{"1", ",", "1", ",", "0"}], "}"}], ",", 
           RowBox[{"IntegerDigits", "[", 
             RowBox[{"\"LIBRARY_FUNCTION_ERROR\"", ",", "2"}], "]"}]}], "]"}],
        ",", "2"}], "]"}],"\"hPa\"","hectopascals","\"Hectopascals\""},
  "Quantity"]], "Output",
 CellChangeTimes->{{3.674088132019018*^9, 3.674088179547193*^9}, 
   3.67408822508991*^9}]
}, Open  ]]
},
WindowSize->{1134, 730},
WindowMargins->{{282, Automatic}, {Automatic, 13}},
FrontEndVersion->"10.3 for Linux ARM (32-bit) (January 18, 2016)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 354, 8, 55, "Input"],
Cell[CellGroupData[{
Cell[937, 32, 119, 3, 32, "Input"],
Cell[1059, 37, 10768, 216, 65, "Output"]
}, Open  ]],
Cell[11842, 256, 113, 1, 32, "Input"],
Cell[11958, 259, 323, 8, 32, "Input"],
Cell[CellGroupData[{
Cell[12306, 271, 254, 6, 32, "Input"],
Cell[12563, 279, 364, 6, 77, "Output"]
}, Open  ]],
Cell[12942, 288, 543, 11, 32, "Input"],
Cell[CellGroupData[{
Cell[13510, 303, 283, 8, 32, "Input"],
Cell[13796, 313, 70, 1, 32, "Output"]
}, Open  ]],
Cell[13881, 317, 963, 20, 77, "Input"],
Cell[14847, 339, 1785, 37, 143, "Input"],
Cell[16635, 378, 1018, 23, 187, "Input"],
Cell[17656, 403, 8533, 175, 561, "Input"],
Cell[26192, 580, 3339, 83, 319, "Input"],
Cell[29534, 665, 267, 3, 55, "Input"],
Cell[CellGroupData[{
Cell[29826, 672, 156, 2, 32, "Input"],
Cell[29985, 676, 155, 2, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[30177, 683, 127, 2, 32, "Input"],
Cell[30307, 687, 338, 9, 23, "Message"],
Cell[30648, 698, 75835, 1552, 229, "Output"]
}, Open  ]],
Cell[106498, 2253, 317, 6, 32, "Input"],
Cell[CellGroupData[{
Cell[106840, 2263, 224, 4, 32, "Input"],
Cell[107067, 2269, 498, 11, 23, "Message"],
Cell[107568, 2282, 624, 12, 23, "Message"],
Cell[108195, 2296, 512, 12, 38, "Output"]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
